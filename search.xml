<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>困扰99%前端程序员的Vue问题，全在这了（含代码）</title>
      <link href="2020/11/08/kun-rao-99-qian-duan-cheng-xu-yuan-de-vue-wen-ti-quan-zai-zhe-liao-han-dai-ma/"/>
      <url>2020/11/08/kun-rao-99-qian-duan-cheng-xu-yuan-de-vue-wen-ti-quan-zai-zhe-liao-han-dai-ma/</url>
      
        <content type="html"><![CDATA[<h2 id="困扰99-前端程序员的Vue问题，全在这了（含代码）"><a href="#困扰99-前端程序员的Vue问题，全在这了（含代码）" class="headerlink" title="困扰99%前端程序员的Vue问题，全在这了（含代码）"></a>困扰99%前端程序员的Vue问题，全在这了（含代码）</h2><h3 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h3><p>不断摸索踩坑之后，总结出如下几点vue项目开发中常见的问题及解决办法</p><ul><li>列表进入详情页的传参问题。</li><li>本地开发环境请求服务器接口跨域的问题</li><li>axios封装和api接口的统一管理</li><li>UI库的按需加载</li><li>如何优雅的只在当前页面中覆盖ui库中组件的样式</li><li>定时器问题</li><li>rem文件的导入问题</li><li>Vue-Awesome-Swiper基本能解决你所有的轮播需求</li><li>打包后生成很大的.map文件的问题</li><li>fastClick的300ms延迟解决方案</li><li>组件中写选项的顺序</li></ul><h3 id="2-列表进入详情页传参问题"><a href="#2-列表进入详情页传参问题" class="headerlink" title="2.列表进入详情页传参问题"></a>2.列表进入详情页传参问题</h3><p>例如商品列表页面前往商品详情页面，需要传一个商品id;</p><pre><code>&lt;router-link :to=&quot;&#123;path: &#39;detail&#39;, query: &#123;id: 1&#125;&#125;&quot;&gt;前往detail页面&lt;/router-link&gt;</code></pre><p>c页面的路径为<code>http://localhost:8080/#/detail?id=1</code>，可以看到传了一个参数<code>id=1</code>，并且就算刷新页面id也还会存在。此时在c页面可以通过id来获取对应的详情数据，获取id的方式是<code>this.$route.query.id</code></p><p>vue传参方式有：query、params+动态路由传参。</p><p>说下两者的区别：</p><ul><li><p>query通过<code>path</code>切换路由，params通过<code>name</code>切换路由</p><pre><code>// query通过path切换路由&lt;router-link :to=&quot;&#123;path: &#39;Detail&#39;, query: &#123; id: 1 &#125;&#125;&quot;&gt;前往Detail页面&lt;/router-link&gt;// params通过name切换路由&lt;router-link :to=&quot;&#123;name: &#39;Detail&#39;, params: &#123; id: 1 &#125;&#125;&quot;&gt;前往Detail页面&lt;/router-link&gt;</code></pre></li><li><p>query通过<code>this.$route.query</code>来接收参数，params通过<code>this.$route.params</code>来接收参数</p><pre><code>// query通过this.$route.query接收参数created () &#123;    const id = this.$route.query.id;&#125;// params通过this.$route.params来接收参数created () &#123;    const id = this.$route.params.id;&#125;</code></pre></li><li><p>query传参的url展现方式：<code>/detail?id=1&amp;user=123&amp;identity=1&amp;更多参数</code> params＋动态路由的url方式：<code>/detail/123</code></p></li><li><p>params动态路由传参，一定要在路由中定义参数，然后在路由跳转的时候必须要加上参数，否则就是空白页面</p><pre><code>&#123;    path: &#39;/detail/:id&#39;,    name: &#39;Detail&#39;,    component: Detail&#125;,</code></pre></li></ul><p>注意，params传参时，如果没有在路由中定义参数，也是可以传过去的，同时也能接收到，但是一旦刷新页面，这个参数就不存在了。这对于需要依赖参数进行某些操作的行为是行不通的，因为你总不可能要求用户不能刷新页面吧。例如：</p><pre><code>// 定义的路由中，只定义一个id参数&#123;    path: &#39;detail/:id&#39;,    name: &#39;Detail&#39;,    components: Detail&#125;// template中的路由传参，// 传了一个id参数和一个token参数// id是在路由中已经定义的参数，而token没有定义&lt;router-link :to=&quot;&#123;name: &#39;Detail&#39;, params: &#123; id: 1, token: &#39;123456&#39; &#125;&#125;&quot;&gt;前往Detail页面&lt;/router-link&gt;// 在详情页接收created () &#123;    // 以下都可以正常获取到    // 但是页面刷新后，id依然可以获取，而token此时就不存在了    const id = this.$route.params.id;    const token = this.$route.params.token;&#125;</code></pre><h3 id="3-本地开发环境请求服务器接口跨域的问题"><a href="#3-本地开发环境请求服务器接口跨域的问题" class="headerlink" title="3.本地开发环境请求服务器接口跨域的问题"></a>3.<strong>本地开发环境请求服务器接口跨域的问题</strong></h3><p><img src="/huaibinzhang/huaibinzhang.github.io/2020/11/08/kun-rao-99-qian-duan-cheng-xu-yuan-de-vue-wen-ti-quan-zai-zhe-liao-han-dai-ma/!--swig%EF%BF%BC0--" alt="640"></p><p>上面的这个报错大家都不会陌生，报错是说没有访问权限（跨域问题）。本地开发项目请求服务器接口的时候，因为客户端的同源策略，导致了跨域的问题。</p><p>下面先演示一个没有配置允许本地跨域的的情况：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/udZl15qqib0M745gfTC597XibFLzUyPlRjMQ9owyJOp7pTKLK0gRodCiclUfdKuSW9GXFKbFuibZX5PDQibmcgmrjGA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1"></p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/udZl15qqib0M745gfTC597XibFLzUyPlRjp2pxBLSRrKxs3K7wBImia6LkfdL0sVhbic2dRjBploNztffdVmwRf31w/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1"></p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/udZl15qqib0M745gfTC597XibFLzUyPlRjA5ysLpCwRRnibWJnYzjztW9lhm6SyO1eS7FZhQSHjRtSlWsibfbKnB5w/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1"></p><p>可以看到，此时我们点击获取数据，浏览器提示我们跨域了。所以我们访问不到数据。</p><p>那么接下来我们演示设置允许跨域后的数据获取情况：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/udZl15qqib0M745gfTC597XibFLzUyPlRjZicJx6ibSQZHzibVY8FRUpFSECcHtqVnxOWlfXE6zMN1PXI8IIzaMm2Nw/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1"></p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/udZl15qqib0M745gfTC597XibFLzUyPlRjvaqTCaiazYrUU2jsLicicC99eVbxA0OCBWIdxN9dgMyJtBOiblm0JoqueQ/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1"></p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/udZl15qqib0M745gfTC597XibFLzUyPlRjdRWvXsuJ4Iw4aMHibwWfBWViarmlVDnYtsib3O37od6iaDKTYib4SZw8HUw/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1"></p><p>我们在1出设置了允许本地跨域，在2处，要注意我们访问接口时，写的是<code>/api</code>，此处的<code>/api</code>指代的就是我们要请求的接口域名。</p><p>如果我们不想每次接口都带上<code>/api</code>，可以更改axios的默认配置<code>axios.defaults.baseURL = &#39;/api&#39;;</code>这样，我们请求接口就可以直接<code>this.$axios.get(&#39;app.php?m=App&amp;c=Index&amp;a=index&#39;)</code>，很简单有木有。</p><p>此时如果你在<code>network</code>中查看<code>xhr</code>请求，你会发现显示的是<code>localhost:8080/api</code>的请求地址。这样没什么大惊小怪的，代理而已：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/udZl15qqib0M745gfTC597XibFLzUyPlRj8FgTmH7iapqbzgQ0msUQkktBGwocJbr5Gqk6pGXBRHiayz5jdU86jHBA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1"></p><p>好了，最后附上proxyTable的代码：</p><pre><code>proxyTable: &#123;      // 用‘/api’开头，代理所有请求到目标服务器      &#39;/api&#39;: &#123;        target: &#39;http://jsonplaceholder.typicode.com&#39;, // 接口域名        changeOrigin: true, // 是否启用跨域        pathRewrite: &#123; //          &#39;^/api&#39;: &#39;&#39;        &#125;      &#125;&#125;</code></pre><p><strong>注意：配置好后一定要关闭原来的server，重新**</strong><code>npm run dev</code>启动项目。不然无效。**</p><p>axios的封装，主要是用来帮我们进行请求的拦截和响应的拦截。</p><p>在请求的拦截中我们可以携带userToken，post请求头、qs对post提交数据的序列化等。</p><p>在响应的拦截中，我们可以进行根据状态码来进行错误的统一处理等等。</p><p>axios接口的统一管理，是做项目时必须的流程。这样可以方便我们管理我们的接口，在接口更新时我们不必再返回到我们的业务代码中去修改接口。</p><h3 id="4-UI库的按需加载"><a href="#4-UI库的按需加载" class="headerlink" title="4.UI库的按需加载"></a>4.UI库的按需加载</h3><p>为什么要使用按需加载的方式而不是一次性全部引入，原因就不多说了。这里以vant的按需加载为例，演示vue中ui库怎样进行按需加载：</p><ul><li><p>安装：<code>cnpm i vant -S</code></p></li><li><p>安装<code>babel-plugin-import</code>插件使其按需加载：<code>cnpm i babel-plugin-import -D</code></p></li><li><p>在 .babelrc文件中中添加插件配置 ：</p><pre><code>libraryDirectory &#123;    &quot;plugins&quot;: [        // 这里是原来的代码部分        // …………        // 这里是要我们配置的代码        [&quot;import&quot;,            &#123;                &quot;libraryName&quot;: &quot;vant&quot;,                &quot;libraryDirectory&quot;: &quot;es&quot;,                &quot;style&quot;: true            &#125;        ]    ]&#125;</code></pre></li><li><p>在main.js中按需加载你需要的插件：</p><pre><code>// 按需引入vant组件import &#123;    DatetimePicker,    Button,    List&#125; from &#39;vant&#39;;</code></pre></li></ul><ul><li><p>使用组件：</p><pre><code>// 使用vant组件Vue.use(DatetimePicker)    .use(Button)    .use(List);</code></pre></li><li><p>最后在在页面中使用：</p><pre><code>&lt;van-button type=&quot;primary&quot;&gt;按钮&lt;/van-button&gt;</code></pre><p>ps：出来<code>vant</code>库外，像<code>antiUi</code>、<code>elementUi</code>等，很多ui库都支持按需加载，可以去看文档，上面都会有提到。基本都是通过安装babel-plugin-import插件来支持按需加载的，使用方式与vant的如出一辙，可以去用一下。</p></li></ul><h3 id="5-如何优雅的只在当前页面中覆盖ui库中组件的样式"><a href="#5-如何优雅的只在当前页面中覆盖ui库中组件的样式" class="headerlink" title="5.如何优雅的只在当前页面中覆盖ui库中组件的样式"></a><strong>5.如何优雅的只在当前页面中覆盖ui库中组件的样式</strong></h3><p>首先我们vue文件的样式都是写在<code>&lt;style lang=&quot;less&quot; scoped&gt;&lt;/style&gt;</code>标签中的，加scoped是为了使得样式只在当前页面有效。那么问题来了，看图：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/udZl15qqib0M745gfTC597XibFLzUyPlRjYx0ogEicsVCF5JMqtiaiblk1vQpOjBcRJtQhIT3JA5WsyKMWmUnPxFQSg/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1"></p><p>我们正常写的所有样式，都会被加上[data-v-23d425f8]这个属性（如1所示），但是第三方组件内部的标签并没有编译为附带[data-v-23d425f8]这个属性。所以，我们想修改组件的样式，就没辙了。</p><p>怎么办呢，有些小伙伴给第三方组件写个class，然后在一个公共的css文件中或者在当前页面再写一个没有socped属性的style标签，然后直接在里面修改第三方组件的样式。</p><p>这样不失为一个方法，但是存在全局污染和命名冲突的问题。约定特定的命名方式，可以避免命名冲突。但是还是不够优雅。</p><p>作为一名优（<strong>强</strong>）秀（<strong>迫</strong>）的（<strong>症</strong>）前（<strong>患</strong>）端（<strong>者</strong>），怎么能允许这种情况出现呢？好了，下面说下优雅的解决方式：通过深度选择器解决。例如修改上图中组件里的van-ellipsis类的样式，可以这样做：</p><pre><code>.van-tabs /deep/ .van-ellipsis &#123; color: blue&#125;;</code></pre><p>编译后的结果就是：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/udZl15qqib0M745gfTC597XibFLzUyPlRjQ7f4qpYgybVbMeoaZBdGhpDgklF73iaAqdC29v2aqcicibmrxtiaUk42Uw/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1"></p><p>这样就不会给<code>van-ellipsis</code>也添加<code>[data-v-23d425f8]</code>属性了。至此你可以愉快的修改第三方组件的样式了。</p><p>当然了这里的深度选择器<code>/deep/</code>是因为我用的<code>less</code>语言，如果你没有使用<code>less/sass</code>等，可以用<code>&gt;&gt;&gt;</code>符号。更多的关于深度选择器的内容，在文章后面有介绍。</p><h3 id="6-定时器问题"><a href="#6-定时器问题" class="headerlink" title="6.定时器问题"></a>6.定时器问题</h3><p>我在a页面写一个定时，让他每秒钟打印一个1，然后跳转到b页面，此时可以看到，定时器依然在执行。这样是非常消耗性能的。如下图所示：</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/udZl15qqib0M745gfTC597XibFLzUyPlRjNL9XlgtdbKQ1Micc1J6fQblIhYkhW5l5nS57uKiajZVv40zFPZtT8ytA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1"></p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/udZl15qqib0M745gfTC597XibFLzUyPlRjjbkVFz6HcEdibibJD8jictJrTKK8gfU1kHdXctf9ONJZ8mIbZSvVuyLpw/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1"></p><h4 id="解决方法1"><a href="#解决方法1" class="headerlink" title="解决方法1"></a>解决方法1</h4><p>​       首先我在data函数里面进行定义定时器名称：</p><pre class=" language-1"><code class="language-1">data() &#123;    return &#123;        timer: null  // 定时器名称    &#125;&#125;,</code></pre><p>然后这样使用定时器：</p><pre><code>this.timer = (() =&gt; &#123;    // 某些操作&#125;, 1000)</code></pre><p>最后在beforeDestroy()生命周期内清除定时器：</p><pre><code>beforeDestroy() &#123;    clearInterval(this.timer);    this.timer = null;&#125;</code></pre><p>方案1有两点不好的地方，引用尤大的话来说就是：</p><ul><li>它需要在这个组件实例中保存这个 <code>timer</code>，如果可以的话最好只有生命周期钩子可以访问到它。这并不算严重的问题，但是它可以被视为杂物。</li><li>我们的建立代码独立于我们的清理代码，这使得我们比较难于程序化的清理我们建立的所有东西。</li></ul><h4 id="解决方案2"><a href="#解决方案2" class="headerlink" title="解决方案2"></a>解决方案2</h4><p>该方法是通过$once这个事件侦听器器在定义完定时器之后的位置来清除定时器。以下是完整代码：</p><pre><code>const timer = setInterval(() =&gt;&#123;    // 某些定时器操作&#125;, 500);// 通过$once来监听定时器，在beforeDestroy钩子可以被清除。this.$once(&#39;hook:beforeDestroy&#39;, () =&gt; &#123;    clearInterval(timer);&#125;)</code></pre><p>方案2要感谢@zzx18023在评论区提供出的解决方案。类似于其他需要在当前页面使用，离开需要销毁的组件（例如一些第三方库的picker组件等等），都可以使用此方式来解决离开后以后在背后运行的问题。</p><p>综合来说，我们更推荐使用<strong>方案2，使得代码可读性更强，一目了然</strong>。如果不清楚once、on、$off的使用，这里送上官网的地址教程，在程序化的事件侦听器那里: <a href="https://cn.vuejs.org/v2/guide/components-edge-cases.html#%E7%A8%8B%E5%BA%8F%E5%8C%96%E7%9A%84%E4%BA%8B%E4%BB%B6%E4%BE%A6%E5%90%AC%E5%99%A8">https://cn.vuejs.org/v2/guide/components-edge-cases.html#%E7%A8%8B%E5%BA%8F%E5%8C%96%E7%9A%84%E4%BA%8B%E4%BB%B6%E4%BE%A6%E5%90%AC%E5%99%A8</a>。</p><h3 id="7-rem文件的导入问题"><a href="#7-rem文件的导入问题" class="headerlink" title="7.rem文件的导入问题"></a><strong>7.rem文件的导入问题</strong></h3><p>我们在做手机端时，适配是必须要处理的一个问题。例如，我们处理适配的方案就是通过写一个rem.js，原理很简单，就是根据网页尺寸计算html的font-size大小，基本上小伙伴们都知道，这里直接附上代码，不多做介绍。</p><pre><code>(function(c, d) &#123;  var e = document.documentElement || document.body,    a = &quot;orientationchange&quot; in window ? &quot;orientationchange&quot; : &quot;resize&quot;,    b = function() &#123;      var f = e.clientWidth;      e.style.fontSize = f &gt;= 750 ? &quot;100px&quot; : 100 * (f / 750) + &quot;px&quot;;    &#125;;  b();  c.addEventListener(a, b, false);&#125;)(window);</code></pre><p>这里说下怎么引入的问题，很简单。在main.js中，直接<code>import &#39;./config/rem&#39;</code>导入即可。import的路径根据你的文件路径去填写。</p><h3 id="8-Vue-Awesome-Swiper基本能解决你所有的轮播需求"><a href="#8-Vue-Awesome-Swiper基本能解决你所有的轮播需求" class="headerlink" title="8.Vue-Awesome-Swiper基本能解决你所有的轮播需求"></a><strong>8.Vue-Awesome-Swiper基本能解决你所有的轮播需求</strong></h3><p>在我们使用的很多ui库（vant、antiUi、elementUi等）中，都有轮播组件，对于普通的轮播效果足够了。</p><p>但是，某些时候，我们的轮播效果可能比较炫，这时候ui库中的轮播可能就有些力不从心了。当然，如果技术和时间上都还可以的话，可以自己造个比较炫的轮子.</p><p>这里我说一下<code>vue-awesome-swiper</code>这个轮播组件，真的非常强大，基本可以满足我们的轮播需求。</p><p>swiper相信很多人都用过，很好用，也很方便我们二次开发，定制我们需要的轮播效果。</p><p>vue-awesome-swiper组件实质上基于swiper的，或者说就是能在vue中跑的<code>swiper</code>。下面说下怎么使用：</p><ul><li><p>安装 <code>cnpm install vue-awesome-swiper --save</code></p></li><li><p>在组件中使用的方法，全局使用意义不大</p><pre><code>// 引入组件import &#39;swiper/dist/css/swiper.css&#39;import &#123; swiper, swiperSlide &#125; from &#39;vue-awesome-swiper&#39;// 在components中注册组件components: &#123;    swiper,    swiperSlide&#125;// template中使用轮播// ref是当前轮播// callback是回调// 更多参数用法，请参考文档&lt;swiper :options=&quot;swiperOption&quot; ref=&quot;mySwiper&quot; @someSwiperEvent=&quot;callback&quot;&gt;    &lt;!-- slides --&gt;    &lt;swiper-slide&gt;&lt;div class=&quot;item&quot;&gt;1&lt;/div&gt;&lt;/swiper-slide&gt;    &lt;swiper-slide&gt;&lt;div class=&quot;item&quot;&gt;2&lt;/div&gt;&lt;/swiper-slide&gt;    &lt;swiper-slide&gt;&lt;div class=&quot;item&quot;&gt;3&lt;/div&gt;&lt;/swiper-slide&gt;    &lt;!-- Optional controls --&gt;    &lt;div class=&quot;swiper-pagination&quot;  slot=&quot;pagination&quot;&gt;&lt;/div&gt;    &lt;div class=&quot;swiper-button-prev&quot; slot=&quot;button-prev&quot;&gt;&lt;/div&gt;    &lt;div class=&quot;swiper-button-next&quot; slot=&quot;button-next&quot;&gt;&lt;/div&gt;    &lt;div class=&quot;swiper-scrollbar&quot;   slot=&quot;scrollbar&quot;&gt;&lt;/div&gt;&lt;/swiper&gt;</code></pre><pre><code>// 参数要写在data中data() &#123;    return &#123;        // swiper轮播的参数        swiperOption: &#123;            // 滚动条            scrollbar: &#123;                el: &#39;.swiper-scrollbar&#39;,            &#125;,            // 上一张，下一张            navigation: &#123;                nextEl: &#39;.swiper-button-next&#39;,                prevEl: &#39;.swiper-button-prev&#39;,            &#125;,            // 其他参数…………        &#125;    &#125;&#125;,</code></pre><p>swiper需要配置哪些功能需求，自己根据文档进行增加或者删减。附上文档：npm文档，swiper3.0/4.0文档，更多用法，请参考文档说明。</p></li></ul><h3 id="9-打包后生成很大的-map文件的问题"><a href="#9-打包后生成很大的-map文件的问题" class="headerlink" title="9.打包后生成很大的.map文件的问题"></a><strong>9.打包后生成很大的.map文件的问题</strong></h3><p>项目打包后，代码都是经过压缩加密的，如果运行时报错，输出的错误信息无法准确得知是哪里的代码报错。 而生成的.map后缀的文件，就可以像未加密的代码一样，准确的输出是哪一行哪一列有错可以通过设置来不生成该类文件。但是我们在生成环境是不需要.map文件的，所以可以在打包时不生成这些文件：</p><p>在<code>config/index.js</code>文件中，设置<code>productionSourceMap: false,</code>就可以不生成<code>.map</code>文件</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/udZl15qqib0M745gfTC597XibFLzUyPlRjiaPd2m675hMricw55LlFEzAspKgwOLszV1bpyHaA5N0VtOiaZn5Aave7g/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1"></p><h3 id="10-fastClick的300ms延迟解决方案"><a href="#10-fastClick的300ms延迟解决方案" class="headerlink" title="10.fastClick的300ms延迟解决方案"></a><strong>10.fastClick的300ms延迟解决方案</strong></h3><p>开发移动端项目，点击事件会有300ms延迟的问题。至于为什么会有这个问题，请自行百度即可。这里只说下常见的解决思路，不管vue项目还是jq项目，都可以使用<code>fastClick</code>解决。</p><p>安装 <code>fastClick</code>:</p><pre><code>cnpm install fastclick -S</code></pre><p>在main.js中引入fastClick和初始化:</p><pre><code>import FastClick from &#39;fastclick&#39;; // 引入插件FastClick.attach(document.body); // 使用 fastclick</code></pre><h3 id="11-组件中写选项的顺序"><a href="#11-组件中写选项的顺序" class="headerlink" title="11.组件中写选项的顺序"></a><strong>11.组件中写选项的顺序</strong></h3><p>为什么选项要有统一的书写顺序呢？很简单，就是要将选择和认知成本最小化。</p><ul><li><p><strong>副作用</strong> (触发组件外的影响)</p><ul><li><ul><li><code>el</code></li></ul></li></ul></li><li><p><strong>全局感知</strong> (要求组件以外的知识)</p><ul><li><ul><li>name</li></ul></li><li>parent</li></ul></li><li><p><strong>组件类型</strong> (更改组件的类型)</p><ul><li><ul><li><code>functional</code></li></ul></li></ul></li><li><p><strong>模板修改器</strong> (改变模板的编译方式)</p><ul><li><ul><li><code>delimiters</code></li></ul></li><li><code>comments</code></li></ul></li><li><p><strong>模板依赖</strong> (模板内使用的资源)</p><ul><li><ul><li><code>components</code></li></ul></li><li><code>directives</code></li><li><code>filters</code></li></ul></li><li><p><strong>组合</strong> (向选项里合并属性)</p><ul><li><ul><li><code>extends</code></li></ul></li><li><code>mixins</code></li></ul></li><li><p><strong>接口</strong> (组件的接口)</p><ul><li><ul><li><code>inheritAttrs</code></li></ul></li><li><code>model</code></li><li><code>props</code>/<code>propsData</code></li></ul></li><li><p><strong>本地状态</strong> (本地的响应式属性)</p><ul><li><ul><li><code>data</code></li></ul></li><li><code>computed</code></li></ul></li><li><p><strong>事件</strong> (通过响应式事件触发的回调)</p><ul><li><ul><li><code>beforeCreate</code></li></ul></li><li><code>created</code></li><li><code>beforeMount</code></li><li><code>mounted</code></li><li><code>beforeUpdate</code></li><li><code>updated</code></li><li><code>activated</code></li><li><code>deactivated</code></li><li><code>beforeDestroy</code></li><li><code>destroyed</code></li><li><code>watch</code></li><li>生命周期钩子 (按照它们被调用的顺序)</li></ul></li><li><p><strong>非响应式的属性</strong> (不依赖响应系统的实例属性)</p><ul><li><ul><li><code>methods</code></li></ul></li></ul></li><li><p><strong>渲染</strong> (组件输出的声明式描述)</p><ul><li><ul><li><code>template</code>/<code>render</code></li></ul></li><li><code>renderError</code></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 面试题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue中实现token验证</title>
      <link href="2020/11/07/vue-zhong-shi-xian-token-yan-zheng/"/>
      <url>2020/11/07/vue-zhong-shi-xian-token-yan-zheng/</url>
      
        <content type="html"><![CDATA[<h2 id="Vue中实现token验证"><a href="#Vue中实现token验证" class="headerlink" title="Vue中实现token验证"></a>Vue中实现token验证</h2><h3 id="前后端流程分析"><a href="#前后端流程分析" class="headerlink" title="前后端流程分析"></a>前后端流程分析</h3><ol><li>前端页面进行登录操作，将用户名和密码发给服务器</li><li>服务器进行校验，通过后生成token，包含信息有密匙、uid、过期时间等，然后返回给前端</li><li>前端将token保存在本地（建议在localStorage中）和state（vuex）中，下次对服务器请求时带上，然后返回给前端</li><li>服务器端对接收到的token进行校验。通过则进行相应的增删改查操作，并将数据返回给前端；未通过则返回错误码，提示错误信息，然后跳转到登录页</li></ol><h3 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h3><p>技术栈：vuex + axios + localStorage + vue-router</p><ul><li><p>登录路由添加自定义meta字段，来记录该页面是否需要身份验证</p><pre class=" language-vue"><code class="language-vue">// router.js&#123;    path: "/index",    name: "index",    component: resolve => require(['./index.vue'], resolve),    meta: &#123;        requiresAuth: true    &#125;&#125;</code></pre></li><li><p>设置路由拦截</p><pre class=" language-vue"><code class="language-vue">router.beforeEach((to, from, next) => &#123;    //  matched的数组中包含$route对象的检查元字段    //  arr.some() 表示判断该数组是否有元素符合相应的条件, 返回布尔值    if (to.matched.some(record => record.meta.requiresAuth)) &#123;        // 判断当前是否有登录的权限        if (!auth.loggedIn()) &#123;            next(&#123;                path: '/login',                query: &#123; redirect: to.fullPath &#125;            &#125;)        &#125; else &#123;            next()        &#125;    &#125; else &#123;        next() // 确保一定要调用 next()    &#125;&#125;)</code></pre></li><li><p>设置请求/响应拦截<br>在后面的所有请求中都将携带token进行。<br>利用axios中的请求拦截器, 通过配置http response inteceptor, 当后端接口返回401 (未授权), 让用户重新执行登录操作。</p><pre class=" language-vue"><code class="language-vue">// http request 拦截器axios.interceptors.request.use(    config => &#123;        if (store.state.token) &#123;  // 判断是否存在token，如果存在的话，则每个http header都加上token            config.headers.Authorization = `token $&#123;store.state.token&#125;`;        &#125;        return config;    &#125;,    err => &#123;        return Promise.reject(err);    &#125;);// http response 拦截器axios.interceptors.response.use(    response => &#123;        return response;    &#125;,    error => &#123;        if (error.response) &#123;            switch (error.response.status) &#123;                case 401:                    // 返回 401 清除token信息并跳转到登录页面                    store.commit(types.LOGOUT);                    router.replace(&#123;                        path: 'login',                        query: &#123;redirect: router.currentRoute.fullPath&#125;                    &#125;)            &#125;        &#125;        return Promise.reject(error.response.data)   // 返回接口返回的错误信息&#125;);</code></pre></li><li><p>登录页面:</p><pre class=" language-vue"><code class="language-vue">//login.vuemethods: &#123;  login()&#123;      if (this.token) &#123;          // 存储在本地的localStograge中，可以使用cookies/local/sessionStograge          this.$store.commit(types.LOGIN, this.token)          // 跳转至其他页面          let redirect = decodeURIComponent(this.$route.query.redirect || '/');          this.$router.push(&#123;              path: redirect          &#125;)      &#125;  &#125;&#125;</code></pre></li><li><p>vuex设置</p><pre class=" language-vue"><code class="language-vue">import Vuex from 'vuex';import Vue from 'vue';import * as types from './types'Vue.use(Vuex);export default new Vuex.Store(&#123;    state: &#123;        user: &#123;&#125;,        token: null,        title: ''    &#125;,    mutations: &#123;        // 登录成功将, token保存在localStorage中        [types.LOGIN]: (state, data) => &#123;            localStorage.token = data;            state.token = data;        &#125;,        // 退出登录将, token清空        [types.LOGOUT]: (state) => &#123;            localStorage.removeItem('token');            state.token = null        &#125;    &#125;&#125;);</code></pre></li></ul><p>三者的区别:</p><ul><li>sessionStorage 不能跨页面共享的，关闭窗口即被清除</li><li>localStorage 可以同域共享，并且是持久化存储的</li><li>在 local / session storage 的 tokens，就不能从不同的域名中读取,甚至是子域名也不行.<br>解决办法使用Cookie.demo: 假设当用户通过 app.yourdomain.com 上面的验证时你生成一个 token 并且作为一个 cookie 保存到 .yourdomain.com,然后，在 youromdain.com 中你可以检查这个 cookie 是不是已经存在了，并且如果存在的话就转到 app.youromdain.com去。这个 token 将会对程序的子域名以及之后通常的流程都有效（直到这个 token 超过有效期） 只是利用cookie的特性进行存储而非验证.</li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019前端面试题系列--Vue面试题</title>
      <link href="2020/11/07/2019-qian-duan-mian-shi-ti-xi-lie-vue-mian-shi-ti/"/>
      <url>2020/11/07/2019-qian-duan-mian-shi-ti-xi-lie-vue-mian-shi-ti/</url>
      
        <content type="html"><![CDATA[<h2 id="2019前端面试系列——Vue面试题"><a href="#2019前端面试系列——Vue面试题" class="headerlink" title="2019前端面试系列——Vue面试题"></a>2019前端面试系列——Vue面试题</h2><h3 id="Vue双向绑定原理"><a href="#Vue双向绑定原理" class="headerlink" title="Vue双向绑定原理"></a>Vue双向绑定原理</h3><p>mvvm 双向绑定，采用<strong>数据劫持结合发布者-订阅者模式</strong>的方式，通过 <code>Object.defineProperty()</code> 来劫持各个属性的 setter、getter，在数据变动时发布消息给订阅者，触发相应的监听回调。</p><p><img src="https://img2018.cnblogs.com/blog/1062623/201908/1062623-20190804115239165-1926232443.png" alt="MVVM"><br><a href="https://img2018.cnblogs.com/blog/1062623/201908/1062623-20190804115239165-1926232443.png">图片链接</a></p><ul><li>几个要点</li></ul><ol><li>实现一个数据监听器 Observer，能够对数据对象的所有属性进行监听，如有变动可拿到最新值并通知订阅者</li><li>实现一个指令解析器 Compile，对每个元素节点的指令进行扫描和解析，根据指令模板替换数据，以及绑定相应的更新函数</li><li>实现一个 Watcher，作为连接 Observer 和 Compile 的桥梁，能够订阅并收到每个属性变动的通知，执行指令绑定的相应回调函数，从而更新视图</li><li>mvvm 入口函数，整合以上三者</li></ol><ul><li>具体步骤</li></ul><ol><li><p>需要 observe 的数据对象进行递归遍历，包括子属性对象的属性，都加上 setter 和 getter<br>这样的话，给这个对象的某个值赋值，就会触发 setter，那么就能监听到了数据变化</p></li><li><p>compile 解析模板指令，将模板中的变量替换成数据，然后初始化渲染页面视图，并将每个指令对应的节点绑定更新函数，添加监听数据的订阅者，一旦数据有变动，收到通知，更新视图</p></li><li><p>Watcher 订阅者是 Observer 和 Compile 之间通信的桥梁，主要做的事情是:</p><ul><li><p>在自身实例化时往属性订阅器(dep)里面添加自己</p></li><li><p>自身必须有一个 update() 方法</p></li><li><p>待属性变动 dep.notice() 通知时，能调用自身的 update() 方法，并触发 Compile 中绑定的回调，则功成身退。</p></li></ul></li><li><p>MVVM 作为数据绑定的入口，整合 Observer、Compile 和 Watcher 三者，通过Observer来监听自己的 model 数据变化，通过 Compile 来解析编译模板指令，最终利用 Watcher 搭起 Observer 和 Compile 之间的通信桥梁，达到数据变化 -&gt; 视图更新；视图交互变化(input) -&gt; 数据 model 变更的双向绑定效果。</p></li></ol><h3 id="描述下-vue-从初始化页面–修改数据–刷新页面-UI-的过程"><a href="#描述下-vue-从初始化页面–修改数据–刷新页面-UI-的过程" class="headerlink" title="描述下 vue 从初始化页面–修改数据–刷新页面 UI 的过程"></a>描述下 vue 从初始化页面–修改数据–刷新页面 UI 的过程</h3><pre><code> 当 Vue 进入初始化阶段时，一方面 Vue 会遍历 data 中的属性，并用 Object.defineProperty 将它转化成 getter/setter 的形式，实现数据劫持(暂不谈 Vue3.0 的 Proxy)；另一方面，Vue 的指令编译器 Compiler 对元素节点的各个指令进行解析，初始化视图，并订阅 Watcher 来更新试图，此时 Watcher 会将自己添加到消息订阅器 Dep 中，此时初始化完毕。  当数据发生变化时，触发 Observer 中 setter 方法，立即调用 Dep.notify(),Dep 这个数组开始遍历所有的订阅者，并调用其 update 方法，Vue 内部再通过 diff 算法，patch 相应的更新完成对订阅者视图的改变。</code></pre><h3 id="你是如何理解-Vue-的响应式系统的"><a href="#你是如何理解-Vue-的响应式系统的" class="headerlink" title="你是如何理解 Vue 的响应式系统的"></a>你是如何理解 Vue 的响应式系统的</h3><p><img src="https://img2018.cnblogs.com/blog/1062623/201908/1062623-20190808112924933-354933996.jpg" alt="响应式"><br><a href="https://img2018.cnblogs.com/blog/1062623/201908/1062623-20190808112924933-354933996.jpg">图片链接</a></p><p>响应式系统简述:</p><ul><li>任何一个 Vue Component 都有一个与之对应的 Watcher 实例</li><li>Vue 的 data 上的属性会被添加 getter 和 setter 属性</li><li>当 Vue Component render 函数被执行的时候, data 上会被 触碰(touch), 即被读, getter 方法会被调用, 此时 Vue 会去记录此 Vue component 所依赖的所有 data。(这一过程被称为依赖收集)</li><li>data 被改动时（主要是用户操作）, 即被写, setter 方法会被调用, 此时 Vue 会去通知所有依赖于此 data 的组件去调用他们的 render 函数进行更新</li></ul><h3 id="虚拟DOM实现原理"><a href="#虚拟DOM实现原理" class="headerlink" title="虚拟DOM实现原理"></a>虚拟DOM实现原理</h3><ul><li>虚拟DOM本质上是JavaScript对象,是对真实DOM的抽象</li><li>状态变更时，记录新树和旧树的差异</li><li>最后把差异更新到真正的dom中</li></ul><blockquote><p>详细实现见<a href="https://user-gold-cdn.xitu.io/2019/8/1/16c49afec13e0416">面试官: 你对虚拟DOM原理的理解?</a></p></blockquote><h3 id="既然-Vue-通过数据劫持可以精准探测数据变化-为什么还需要虚拟-DOM-进行-diff-检测差异"><a href="#既然-Vue-通过数据劫持可以精准探测数据变化-为什么还需要虚拟-DOM-进行-diff-检测差异" class="headerlink" title="既然 Vue 通过数据劫持可以精准探测数据变化,为什么还需要虚拟 DOM 进行 diff 检测差异"></a>既然 Vue 通过数据劫持可以精准探测数据变化,为什么还需要虚拟 DOM 进行 diff 检测差异</h3><pre><code> 考点: Vue 的变化侦测原理 前置知识: 依赖收集、虚拟 DOM、响应式系统 现代前端框架有两种方式侦测变化，一种是pull，一种是push pull: 其代表为React，我们可以回忆一下React是如何侦测到变化的,我们通常会用setStateAPI显式更新，然后React会进行一层层的Virtual Dom Diff操作找出差异，然后Patch到DOM上，React从一开始就不知道到底是哪发生了变化，只是知道「有变化了」，然后再进行比较暴力的Diff操作查找「哪发生变化了」，另外一个代表就是Angular的脏检查操作。 push: Vue的响应式系统则是push的代表，当Vue程序初始化的时候就会对数据data进行依赖的收集，一但数据发生变化,响应式系统就会立刻得知。因此Vue是一开始就知道是「在哪发生变化了」，但是这又会产生一个问题，如果你熟悉Vue的响应式系统就知道，通常一个绑定一个数据就需要一个Watcher，一但我们的绑定细粒度过高就会产生大量的Watcher，这会带来内存以及依赖追踪的开销，而细粒度过低会无法精准侦测变化,因此Vue的设计是选择中等细粒度的方案,在组件级别进行push侦测的方式,也就是那套响应式系统,通常我们会第一时间侦测到发生变化的组件,然后在组件内部进行Virtual Dom Diff获取更加具体的差异，而Virtual Dom Diff则是pull操作，Vue是push+pull结合的方式进行变化侦测的。</code></pre><p><a href="https://blog.csdn.net/csdn_haow/article/details/89915908">Vue和React的视图更新机制对比</a></p><h3 id="Vue中key值的作用"><a href="#Vue中key值的作用" class="headerlink" title="Vue中key值的作用"></a>Vue中key值的作用</h3><p> 当Vue.js 用 v-for 正在更新已渲染过的元素列表时，它默认用“就地复用”策略。如果数据项的顺序被改变，Vue 将不会移动 DOM 元素来匹配数据项的顺序， 而是简单复用此处每个元素，并且确保它在特定索引下显示已被渲染过的每个元素。<strong>key 的作用主要是为了高效的更新虚拟DOM。</strong></p><h3 id="Vue-的生命周期"><a href="#Vue-的生命周期" class="headerlink" title="Vue 的生命周期"></a>Vue 的生命周期</h3><p><a href="https://juejin.im/post/6844903780736040973">vue生命周期详解</a></p><ol><li><code>beforeCreate</code>和<code>created</code></li><li><code>beforeMount</code>和<code>mounted</code></li><li><code>beforeUpdate</code>和<code>updated</code></li><li><code>beforeDestory</code>和<code>destoryed</code></li><li><code>activated和</code>和<code>deactivated</code></li></ol><h3 id="Vue-组件间通信有哪些方式"><a href="#Vue-组件间通信有哪些方式" class="headerlink" title="Vue 组件间通信有哪些方式"></a>Vue 组件间通信有哪些方式</h3><p><a href="https://www.cnblogs.com/fundebug/p/10884896.html">Vue 组件间通信六种方式</a></p><ol><li>props/$emit</li><li>$emit/$on</li><li>vuex</li><li>$attrs/$listeners</li><li>provide/inject</li><li>$parent/$children 与 ref</li></ol><h3 id="watch、methods-和-computed-的区别"><a href="#watch、methods-和-computed-的区别" class="headerlink" title="watch、methods 和 computed 的区别"></a>watch、methods 和 computed 的区别</h3><ul><li><p>watch 为了监听某个响应数据的变化。computed 是自动监听依赖值的变化，从而动态返回内容，主要目的是简化模板内的复杂运算。所以区别来源于用法，只是需要动态值，那就用 computed ；需要知道值的改变后执行业务逻辑，才用 watch。</p></li><li><p>methods是一个方法，它可以接受参数，而computed 不能，computed 是可以缓存的，methods 不会。computed 可以依赖其他 computed，甚至是其他组件的 data。</p></li></ul><h3 id="vue-中怎么重置-data"><a href="#vue-中怎么重置-data" class="headerlink" title="vue 中怎么重置 data"></a>vue 中怎么重置 data</h3><p>使用Object.assign()，vm.$data可以获取当前状态下的data，vm.$options.data(this)可以获取到组件初始化状态下的data。</p><pre class=" language-js"><code class="language-js">Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$data<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$options<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// 注意加this，不然取不到data() &amp;#123; a: this.methodA &amp;#125; 中的this.methodA。</span></code></pre><blockquote><p>原因参考 <a href="https://blog.csdn.net/mocoe/article/details/89682022">Vue中的this.$options.data()和this.$data</a></p></blockquote><h3 id="组件中写-name-选项有什么作用"><a href="#组件中写-name-选项有什么作用" class="headerlink" title="组件中写 name 选项有什么作用"></a>组件中写 name 选项有什么作用</h3><ol><li>项目使用 keep-alive 时，可搭配组件 name 进行缓存过滤</li><li>DOM 做递归组件时需要调用自身 name</li><li>vue-devtools 调试工具里显示的组见名称是由vue中组件name决定的</li></ol><h3 id="vue-router-有哪些钩子函数"><a href="#vue-router-有哪些钩子函数" class="headerlink" title="vue-router 有哪些钩子函数"></a>vue-router 有哪些钩子函数</h3><p>官方文档: <a href="https://router.vuejs.org/zh/guide/advanced/navigation-guards.html#%E5%85%A8%E5%B1%80%E5%89%8D%E7%BD%AE%E5%AE%88%E5%8D%AB">vue-router钩子函数</a></p><ul><li>全局前置守卫 <code>router.beforeEach</code></li><li>全局解析守卫 <code>router.beforeResolve</code></li><li>全局后置钩子 <code>router.afterEach</code></li><li>路由独享的守卫 <code>beforeEnter</code></li><li>组件内的守卫 <code>beforeRouteEnter</code>、<code>beforeRouteUpdate</code>、<code>beforeRouteLeave</code></li></ul><p><a href="https://juejin.im/post/6844903615283363848">前端路由简介以及vue-router实现原理</a></p><h3 id="route-和-router-的区别是什么"><a href="#route-和-router-的区别是什么" class="headerlink" title="route 和 router 的区别是什么"></a>route 和 router 的区别是什么</h3><p><code>route</code>是“路由信息对象”，包括<code>path</code>,<code>params</code>,<code>hash</code>,<code>query</code>,<code>fullPath</code>,<code>matched</code>,<code>name</code>等路由信息参数。<br><code>router</code>是“路由实例对象”，包括了路由的跳转方法(<code>push</code>、<code>replace</code>)，钩子函数等。</p><h3 id="说一下-Vue-和-React-的认识，做一个简单的对比"><a href="#说一下-Vue-和-React-的认识，做一个简单的对比" class="headerlink" title="说一下 Vue 和 React 的认识，做一个简单的对比"></a>说一下 Vue 和 React 的认识，做一个简单的对比</h3><p><strong>1.监听数据变化的实现原理不同</strong></p><ul><li><p>Vue 通过 getter/setter 以及一些函数的劫持，能精确快速的计算出 Virtual DOM 的差异。这是由于它在渲染过程中，会跟踪每一个组件的依赖关系，不需要重新渲染整个组件树。</p></li><li><p>React 默认是通过比较引用的方式进行的，如果不优化，每当应用的状态被改变时，全部子组件都会重新渲染，可能导致大量不必要的 VDOM 的重新渲染。<br>   Vue 不需要特别的优化就能达到很好的性能，而对于 React 而言，需要通过 PureComponent/shouldComponentUpdate 这个生命周期方法来进行控制。如果你的应用中，交互复杂，需要处理大量的 UI 变化，那么使用 Virtual DOM 是一个好主意。如果你更新元素并不频繁，那么 Virtual DOM 并不一定适用，性能很可能还不如直接操控 DOM。</p><p>   为什么 React 不精确监听数据变化呢？这是因为 Vue 和 React 设计理念上的区别，Vue 使用的是可变数据，而 React 更强调数据的不可变。</p></li></ul><p><strong>2.数据流的不同</strong></p><p><img src="https://img-blog.csdnimg.cn/20190601094122147.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1Rva2tpXw==,size_16,color_FFFFFF,t_70" alt="vue版本比较"></p><ul><li><p>Vue 中默认支持双向绑定，组件与 DOM 之间可以通过 v-model 双向绑定。但是，父子组件之间，props 在 2.x 版本是单向数据流</p></li><li><p>React 一直提倡的是单向数据流，他称之为 onChange/setState()模式。</p></li></ul><p>不过由于我们一般都会用 Vuex 以及 Redux 等单向数据流的状态管理框架，因此很多时候我们感受不到这一点的区别了。</p><p><strong>3.模板渲染方式的不同</strong></p><ul><li><p>在表层上，模板的语法不同</p><ul><li><p>React 是通过 JSX 渲染模板</p></li><li><p>而 Vue 是通过一种拓展的 HTML 语法进行渲染</p></li></ul></li><li><p>在深层上，模板的原理不同，这才是他们的本质区别：</p><ul><li>React 是在组件 JS 代码中，通过原生 JS 实现模板中的常见语法，比如插值，条件，循环等，都是通过 JS 语法实现的</li><li>Vue 是在和组件 JS 代码分离的单独的模板中，通过指令来实现的，比如条件语句就需要 v-if 来实现</li></ul></li></ul><p>对这一点，我个人比较喜欢 React 的做法，因为他更加纯粹更加原生，而 Vue 的做法显得有些独特，会把 HTML 弄得很乱。举个例子，说明 React 的好处：react 中 render 函数是支持闭包特性的，所以我们 import 的组件在 render 中可以直接调用。但是在 Vue 中，由于模板中使用的数据都必须挂在 this 上进行一次中转，所以我们 import 一个组件完了之后，还需要在 components 中再声明下，这样显然是很奇怪但又不得不这样的做法。</p><h3 id="Vue-的-nextTick-的原理是什么"><a href="#Vue-的-nextTick-的原理是什么" class="headerlink" title="Vue 的 nextTick 的原理是什么"></a>Vue 的 nextTick 的原理是什么</h3><p><strong>1. 为什么需要 nextTick</strong></p><p>Vue 是异步修改 DOM 的并且不鼓励开发者直接接触 DOM，但有时候业务需要必须对数据更改–刷新后的 DOM 做相应的处理，这时候就可以使用 Vue.nextTick(callback)这个 api 了。</p><p><strong>2. 理解原理前的准备</strong></p><p>   首先需要知道事件循环中宏任务和微任务这两个概念(这其实也是面试常考点)。请阅大佬文章–<a href="https://juejin.im/post/6844903802185711629">彻底搞懂浏览器Event-loop</a></p><p>常见的宏任务有 script, setTimeout, setInterval, setImmediate, I/O, UI rendering<br>常见的微任务有 process.nextTick(Nodejs),Promise.then(), MutationObserver;</p><p><strong>3. 理解 nextTick</strong></p><p>而 nextTick 的原理正是 vue 通过异步队列控制 DOM 更新和 nextTick 回调函数先后执行的方式。如果大家看过这部分的源码，会发现其中做了很多 isNative()的判断，因为这里还存在兼容性优雅降级的问题。可见 Vue 开发团队的深思熟虑，对性能的良苦用心。</p><p>如果你比较了解了前面的事件循环原理，推荐你看看这篇文章 请阅大佬文章–<a href="https://mp.weixin.qq.com/s/mCcW4OYj3p3471ghMBylBw">全面解析 Vue.nextTick 实现原理</a></p><h3 id="Vuex-有哪几种属性"><a href="#Vuex-有哪几种属性" class="headerlink" title="Vuex 有哪几种属性"></a>Vuex 有哪几种属性</h3><p>有五种，分别是 <code>State</code>、<code>Getter</code>、<code>Mutation</code>、<code>Action</code>、<code>Module</code></p><h3 id="vue-首屏加载优化"><a href="#vue-首屏加载优化" class="headerlink" title="vue 首屏加载优化"></a>vue 首屏加载优化</h3><p><strong>1. 把不常改变的库放到 index.html 中，通过 cdn 引入</strong></p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.bootcss.com/font-awesome/4.7.0/css/font-awesome.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.bootcss.com/element-ui/2.4.0/theme-chalk/index.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Loading .. <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- built files will be auto injected --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.bootcss.com/vue/2.5.16/vue.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.bootcss.com/vue-router/3.0.1/vue-router.min. js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.bootcss.com/element-ui/2.4.0/index. js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><p>然后找到 build/webpack.base.conf.js 文件，在 module.exports = { } 中添加以下代码</p><pre class=" language-js"><code class="language-js">externals<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token string">'vue'</span><span class="token punctuation">:</span> <span class="token string">'Vue'</span><span class="token punctuation">,</span>  <span class="token string">'vue-router'</span><span class="token punctuation">:</span> <span class="token string">'VueRouter'</span><span class="token punctuation">,</span>  <span class="token string">'element-ui'</span><span class="token punctuation">:</span> <span class="token string">'ELEMENT'</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span></code></pre><p>这样 webpack 就不会把 vue.js, vue-router, element-ui 库打包了。声明一下，我把 main.js 中对 element 的引入删掉了，不然我发现打包后的 app.css 还是会把 element 的 css 打包进去，删掉后就没了。<br>然后你打包就会发现 vendor 文件小了很多~</p><p><strong>2. vue 路由的懒加载</strong><br><code>import</code>或者<code>require</code>懒加载。你打包就会发现，多了很多 1.xxxxx.js；2.xxxxx.js 等等，而 vendor.xxx.js 没了，剩下 app.js 和 manifest.js，而且 app.js 还很小，我这里是 100k 多一点。</p><p><strong>3. 不生成 map 文件</strong><br>找到 config/index.js，修改为 <code>productionSourceMap: false</code></p><p><strong>4. vue 组件尽量不要全局引入</strong></p><p><strong>5. 使用更轻量级的工具库</strong></p><p><strong>6. 开启gzip压缩</strong><br>这个优化是两方面的，前端将文件打包成.gz文件，然后通过nginx的配置，让浏览器直接解析.gz文件。</p><p><strong>7. 首页单独做服务端渲染</strong><br>如果首页真的有瓶颈，可以考虑用 node 单独做服务端渲染，而下面的子页面仍用 spa 单页的方式交互。<br>这里不推荐直接用 nuxt.js 服务端渲染方案，因为这样一来增加了学习成本，二来服务端的维护成本也会上升，有时在本机测试没问题，在服务端跑就有问题，为了省心，还是最大限度的使用静态页面较好。</p><p>参考链接<br><a href="https://www.jianshu.com/p/df198914331b">vue首屏加载优化</a><br><a href="https://www.cnblogs.com/mianbaodaxia/p/10751453.html">vue项目首屏加载优化实战</a></p><h3 id="Vue-3-0-有没有过了解"><a href="#Vue-3-0-有没有过了解" class="headerlink" title="Vue 3.0 有没有过了解"></a>Vue 3.0 有没有过了解</h3><p>关于Vue 3.0有幸看过尤大的关于3.0版本的<a href="https://zhuanlan.zhihu.com/p/68477600">RFC Vue Function-based API RFC</a>。大致说了三个点，第一个是关于提出的新API <code>setup()</code>函数，第二个说了对于Typescript的支持，最后说了关于替换<code>Object.defineProperty</code>为 Proxy 的支持。</p><p>详细说了下关于Proxy代替带来的性能上的提升，因为传统的原型链拦截的方法，无法检测对象及数组的一些更新操作，但使用Proxy又带来了浏览器兼容问题。</p><h3 id="vue-cli-替我们做了哪些工作"><a href="#vue-cli-替我们做了哪些工作" class="headerlink" title="vue-cli 替我们做了哪些工作"></a>vue-cli 替我们做了哪些工作</h3><p>首先需要知道 vue-cli 是什么？它是基于 Vue.js 进行快速开发的完整系统，也可以理解成是很多 npm 包的集合。其次，vue-cli 完成的功能有哪些？</p><blockquote><p>.vue 文件 –&gt; .js 文件<br>ES6 语法 –&gt; ES5 语法<br>Sass,Less,Stylus –&gt; CSS<br>对 jpg,png,font 等静态资源的处理<br>热更新<br>定义环境变量，区分 dev 和 production 模式<br>…</p></blockquote><p>如果开发者需要补充或修改默认设置，需要在 package.json 同级下新建一个 vue.config.js 文件</p>]]></content>
      
      
      <categories>
          
          <category> 面试题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20道JS原理题助你面试一臂之力</title>
      <link href="2020/11/06/20-dao-js-yuan-li-ti-zhu-ni-mian-shi-yi-bi-zhi-li/"/>
      <url>2020/11/06/20-dao-js-yuan-li-ti-zhu-ni-mian-shi-yi-bi-zhi-li/</url>
      
        <content type="html"><![CDATA[<h2 id="20道JS原理题助你面试一臂之力"><a href="#20道JS原理题助你面试一臂之力" class="headerlink" title="20道JS原理题助你面试一臂之力"></a>20道JS原理题助你面试一臂之力</h2><h3 id="1-实现一个call函数"><a href="#1-实现一个call函数" class="headerlink" title="1. 实现一个call函数"></a>1. 实现一个call函数</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 思路：将要改变this指向的方法挂到目标this上执行并返回</span>Function<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>mycall <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">this</span> <span class="token operator">!==</span> <span class="token string">'function'</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">'not funciton'</span><span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  context <span class="token operator">=</span> context <span class="token operator">||</span> window  context<span class="token punctuation">.</span>fn <span class="token operator">=</span> <span class="token keyword">this</span>  <span class="token keyword">let</span> arg <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arguments<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token keyword">let</span> result <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>arg<span class="token punctuation">)</span>  <span class="token keyword">delete</span> context<span class="token punctuation">.</span>fn  <span class="token keyword">return</span> result<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="2-实现一个apply函数"><a href="#2-实现一个apply函数" class="headerlink" title="2.实现一个apply函数"></a>2.实现一个apply函数</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 思路：将要改变this指向的方法挂到目标this上执行并返回</span>Function<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>myapply <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">this</span> <span class="token operator">!==</span> <span class="token string">'function'</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">'not funciton'</span><span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  context <span class="token operator">=</span> context <span class="token operator">||</span> window  context<span class="token punctuation">.</span>fn <span class="token operator">=</span> <span class="token keyword">this</span>  <span class="token keyword">let</span> result  <span class="token keyword">if</span> <span class="token punctuation">(</span>arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    result <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    result <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token keyword">delete</span> context<span class="token punctuation">.</span>fn  <span class="token keyword">return</span> result<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="3-实现一个bind函数"><a href="#3-实现一个bind函数" class="headerlink" title="3.实现一个bind函数"></a>3.实现一个bind函数</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 思路：类似call，但返回的是函数</span>Function<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>mybind <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">this</span> <span class="token operator">!==</span> <span class="token string">'function'</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">'Error'</span><span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> _this <span class="token operator">=</span> <span class="token keyword">this</span>  <span class="token keyword">let</span> arg <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arguments<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 处理函数使用new的情况</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">F</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">_this</span><span class="token punctuation">(</span><span class="token operator">...</span>arg<span class="token punctuation">,</span> <span class="token operator">...</span>arguments<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> _this<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> arg<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token operator">...</span>arguments<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="4-instanceof的原理"><a href="#4-instanceof的原理" class="headerlink" title="4. instanceof的原理"></a>4. instanceof的原理</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 思路：右边变量的原型存在于左边变量的原型链上</span><span class="token keyword">function</span> <span class="token function">instanceOf</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> right<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> leftValue <span class="token operator">=</span> left<span class="token punctuation">.</span>__proto__  <span class="token keyword">let</span> rightValue <span class="token operator">=</span> right<span class="token punctuation">.</span>prototype  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>leftValue <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token boolean">false</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>leftValue <span class="token operator">===</span> rightValue<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token boolean">true</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    leftValue <span class="token operator">=</span> leftValue<span class="token punctuation">.</span>__proto__  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="5-Object-create的基本实现原理"><a href="#5-Object-create的基本实现原理" class="headerlink" title="5. Object.create的基本实现原理"></a>5. Object.create的基本实现原理</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 思路：将传入的对象作为原型</span><span class="token keyword">function</span> <span class="token function">create</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token keyword">function</span> <span class="token function">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  F<span class="token punctuation">.</span>prototype <span class="token operator">=</span> obj  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="6-new本质"><a href="#6-new本质" class="headerlink" title="6. new本质"></a>6. new本质</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">function</span> myNew <span class="token punctuation">(</span>fun<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 创建一个新对象且将其隐式原型指向构造函数原型</span>    <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      __proto__ <span class="token punctuation">:</span> fun<span class="token punctuation">.</span>prototype    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 执行构造函数</span>    fun<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token operator">...</span>arguments<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 返回该对象</span>    <span class="token keyword">return</span> obj  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">person</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token function">myNew</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'chen'</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// &amp;#123;name: "chen", age: 18&amp;#125;</span></code></pre><h3 id="7-实现一个基本的Promise"><a href="#7-实现一个基本的Promise" class="headerlink" title="7. 实现一个基本的Promise"></a>7. 实现一个基本的Promise</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 未添加异步处理等其他边界情况</span><span class="token comment" spellcheck="true">// ①自动执行函数，②三个状态，③then</span><span class="token keyword">class</span> <span class="token class-name">Promise</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  constructor <span class="token punctuation">(</span>fn<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 三个状态</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token string">'pending'</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> undefined    <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> undefined    <span class="token keyword">let</span> resolve <span class="token operator">=</span> value <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">'pending'</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token string">'fulfilled'</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> reject <span class="token operator">=</span> value <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">'pending'</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token string">'rejected'</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> value      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 自动执行函数</span>    <span class="token keyword">try</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token function">fn</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">e</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// then</span>  <span class="token function">then</span><span class="token punctuation">(</span>onFulfilled<span class="token punctuation">,</span> onRejected<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token string">'fulfilled'</span><span class="token punctuation">:</span>        <span class="token function">onFulfilled</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">break</span>      <span class="token keyword">case</span> <span class="token string">'rejected'</span><span class="token punctuation">:</span>        <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">break</span>      <span class="token keyword">default</span><span class="token punctuation">:</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="8-实现浅拷贝"><a href="#8-实现浅拷贝" class="headerlink" title="8. 实现浅拷贝"></a>8. 实现浅拷贝</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 1. ...实现</span><span class="token keyword">let</span> copy1 <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">...</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>x<span class="token punctuation">:</span><span class="token number">1</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 2. Object.assign实现</span><span class="token keyword">let</span> copy2 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>x<span class="token punctuation">:</span><span class="token number">1</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span></code></pre><h3 id="9-实现一个基本的深拷贝"><a href="#9-实现一个基本的深拷贝" class="headerlink" title="9. 实现一个基本的深拷贝"></a>9. 实现一个基本的深拷贝</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 1. JOSN.stringify()/JSON.parse()</span><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>a<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> b<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>x<span class="token punctuation">:</span> <span class="token number">3</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 2. 递归拷贝</span><span class="token keyword">function</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> copy <span class="token operator">=</span> obj <span class="token keyword">instanceof</span> <span class="token class-name">Array</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      copy<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">'object'</span> <span class="token operator">?</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> copy<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="10-使用setTimeout模拟setInterval"><a href="#10-使用setTimeout模拟setInterval" class="headerlink" title="10.使用setTimeout模拟setInterval"></a>10.<strong>使用setTimeout模拟setInterval</strong></h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 可避免setInterval因执行时间导致的间隔执行时间不一致</span>setTimeout <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// do something</span>  setTimeout <span class="token punctuation">(</span>arguments<span class="token punctuation">.</span>callee<span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span></code></pre><h3 id="11-js实现一个继承方法-借用构造函数继承实例属性"><a href="#11-js实现一个继承方法-借用构造函数继承实例属性" class="headerlink" title="11.js实现一个继承方法//借用构造函数继承实例属性"></a>11.js实现一个继承方法//借用构造函数继承实例属性</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 借用构造函数继承实例属性</span><span class="token keyword">function</span> Child <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  Parent<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 寄生继承原型属性</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> Super <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  Super<span class="token punctuation">.</span>prototype <span class="token operator">=</span> Parent<span class="token punctuation">.</span>prototype  Child<span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h3 id="12-实现一个基本的Event-Bus"><a href="#12-实现一个基本的Event-Bus" class="headerlink" title="12. 实现一个基本的Event Bus"></a>12. 实现一个基本的Event Bus</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 组件通信，一个触发与监听的过程</span><span class="token keyword">class</span> <span class="token class-name">EventEmitter</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  constructor <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 存储事件</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>events <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>events <span class="token operator">||</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 监听事件</span>  addListener <span class="token punctuation">(</span>type<span class="token punctuation">,</span> fn<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> fn<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 触发事件</span>  emit <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> handle <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span>    handle<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">...</span>arguments<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 测试</span><span class="token keyword">let</span> emitter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EventEmitter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 监听事件</span>emitter<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token string">'ages'</span><span class="token punctuation">,</span> age <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 触发事件</span>emitter<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">'ages'</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// 18</span></code></pre><h3 id="13-实现一个双向数据绑定"><a href="#13-实现一个双向数据绑定" class="headerlink" title="13.实现一个双向数据绑定"></a>13.实现一个双向数据绑定</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">let</span> input <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">)</span><span class="token keyword">let</span> span <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'span'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 数据劫持</span>Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">'text'</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  configurable<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  enumerable<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'获取数据了'</span><span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>  <span class="token keyword">set</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'数据更新了'</span><span class="token punctuation">)</span>    input<span class="token punctuation">.</span>value <span class="token operator">=</span> newVal    span<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> newVal  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 输入监听</span>input<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'keyup'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  obj<span class="token punctuation">.</span>text <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span></code></pre><blockquote><p>完整实现可前往之前写的：这应该是最详细的响应式系统讲解了</p><p><a href="https://juejin.im/post/5d26e368e51d4577407b1dd7">https://juejin.im/post/5d26e368e51d4577407b1dd7</a></p></blockquote><h3 id="14-实现一个简单路由"><a href="#14-实现一个简单路由" class="headerlink" title="14.实现一个简单路由"></a>14.实现一个简单路由</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// hash路由</span><span class="token keyword">class</span> <span class="token class-name">Route</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 路由存储对象</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>routes <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 当前hash</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>currentHash <span class="token operator">=</span> <span class="token string">''</span>    <span class="token comment" spellcheck="true">// 绑定this，避免监听时this指向改变</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>freshRoute <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>freshRoute<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 监听</span>    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'load'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>freshRoute<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'hashchange'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>freshRoute<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 存储</span>  storeRoute <span class="token punctuation">(</span>path<span class="token punctuation">,</span> cb<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>routes<span class="token punctuation">[</span>path<span class="token punctuation">]</span> <span class="token operator">=</span> cb <span class="token operator">||</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 更新</span>  freshRoute <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>currentHash <span class="token operator">=</span> location<span class="token punctuation">.</span>hash<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">'/'</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>routes<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentHash<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="15-实现懒加载"><a href="#15-实现懒加载" class="headerlink" title="15.实现懒加载"></a>15.实现懒加载</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./imgs/default.png<span class="token punctuation">"</span></span> <span class="token attr-name">data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./imgs/1.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./imgs/default.png<span class="token punctuation">"</span></span> <span class="token attr-name">data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./imgs/2.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./imgs/default.png<span class="token punctuation">"</span></span> <span class="token attr-name">data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./imgs/3.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./imgs/default.png<span class="token punctuation">"</span></span> <span class="token attr-name">data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./imgs/4.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./imgs/default.png<span class="token punctuation">"</span></span> <span class="token attr-name">data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./imgs/5.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./imgs/default.png<span class="token punctuation">"</span></span> <span class="token attr-name">data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./imgs/6.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./imgs/default.png<span class="token punctuation">"</span></span> <span class="token attr-name">data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./imgs/7.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./imgs/default.png<span class="token punctuation">"</span></span> <span class="token attr-name">data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./imgs/8.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./imgs/default.png<span class="token punctuation">"</span></span> <span class="token attr-name">data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./imgs/9.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./imgs/default.png<span class="token punctuation">"</span></span> <span class="token attr-name">data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./imgs/10.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span></code></pre><pre class=" language-js"><code class="language-js"><span class="token keyword">let</span> imgs <span class="token operator">=</span>  document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 可视区高度</span><span class="token keyword">let</span> clientHeight <span class="token operator">=</span> window<span class="token punctuation">.</span>innerHeight <span class="token operator">||</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight <span class="token operator">||</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientHeight<span class="token keyword">function</span> lazyLoad <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 滚动卷去的高度</span>  <span class="token keyword">let</span> scrollTop <span class="token operator">=</span> window<span class="token punctuation">.</span>pageYOffset <span class="token operator">||</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop <span class="token operator">||</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> imgs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 图片在可视区冒出的高度</span>    <span class="token keyword">let</span> x <span class="token operator">=</span> clientHeight <span class="token operator">+</span> scrollTop <span class="token operator">-</span> imgs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>offsetTop    <span class="token comment" spellcheck="true">// 图片在可视区内</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> x <span class="token operator">&lt;</span> clientHeight<span class="token operator">+</span>imgs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>height<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      imgs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src <span class="token operator">=</span> imgs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// addEventListener('scroll', lazyLoad) or setInterval(lazyLoad, 1000)</span></code></pre><h3 id="16-rem实现原理"><a href="#16-rem实现原理" class="headerlink" title="16.rem实现原理"></a>16.rem实现原理</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 原始配置</span><span class="token keyword">function</span> setRem <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> doc <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement  <span class="token keyword">let</span> width <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>width  <span class="token keyword">let</span> rem <span class="token operator">=</span> width <span class="token operator">/</span> <span class="token number">75</span>  doc<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontSize <span class="token operator">=</span> rem <span class="token operator">+</span> <span class="token string">'px'</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 监听窗口变化</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"resize"</span><span class="token punctuation">,</span> setRem<span class="token punctuation">)</span></code></pre><h3 id="17-手写实现AJAX"><a href="#17-手写实现AJAX" class="headerlink" title="17. 手写实现AJAX"></a>17. 手写实现AJAX</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 1. 简单流程</span><span class="token comment" spellcheck="true">// 实例化</span><span class="token keyword">let</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 初始化</span>xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> url<span class="token punctuation">,</span> <span class="token keyword">async</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 发送请求</span>xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 设置状态变化回调处理请求结果</span>xhr<span class="token punctuation">.</span>onreadystatechange <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyStatus <span class="token operator">===</span> <span class="token number">4</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 2. 基于promise实现</span><span class="token keyword">function</span> ajax <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 请求地址</span>  <span class="token keyword">const</span> url <span class="token operator">=</span> options<span class="token punctuation">.</span>url  <span class="token comment" spellcheck="true">// 请求方法</span>  <span class="token keyword">const</span> method <span class="token operator">=</span> options<span class="token punctuation">.</span>method<span class="token punctuation">.</span><span class="token function">toLocaleLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">'get'</span>  <span class="token comment" spellcheck="true">// 默认为异步true</span>  <span class="token keyword">const</span> <span class="token keyword">async</span> <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token keyword">async</span>  <span class="token comment" spellcheck="true">// 请求参数</span>  <span class="token keyword">const</span> data <span class="token operator">=</span> options<span class="token punctuation">.</span>data  <span class="token comment" spellcheck="true">// 实例化</span>  <span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// 请求超时</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>timeout <span class="token operator">&amp;&amp;</span> options<span class="token punctuation">.</span>timeout <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    xhr<span class="token punctuation">.</span>timeout <span class="token operator">=</span> options<span class="token punctuation">.</span>timeout  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 返回一个Promise实例</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    xhr<span class="token punctuation">.</span>ontimeout <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> reject <span class="token operator">&amp;&amp;</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">'请求超时'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 监听状态变化回调</span>    xhr<span class="token punctuation">.</span>onreadystatechange <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 200-300 之间表示请求成功，304资源未变，取缓存</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">>=</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">&lt;</span> <span class="token number">300</span> <span class="token operator">||</span> xhr<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">304</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          resolve <span class="token operator">&amp;&amp;</span> <span class="token function">resolve</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          reject <span class="token operator">&amp;&amp;</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 错误回调</span>    xhr<span class="token punctuation">.</span>onerror <span class="token operator">=</span> err <span class="token operator">=</span><span class="token operator">></span> reject <span class="token operator">&amp;&amp;</span> <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>    <span class="token keyword">let</span> paramArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">let</span> encodeData    <span class="token comment" spellcheck="true">// 处理请求参数</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> data<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 参数拼接需要通过 encodeURIComponent 进行编码</span>        paramArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'='</span> <span class="token operator">+</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      encodeData <span class="token operator">=</span> paramArr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'&amp;'</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// get请求拼接参数</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>method <span class="token operator">===</span> <span class="token string">'get'</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// 检测url中是否已存在 ? 及其位置</span>      <span class="token keyword">const</span> index <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'?'</span><span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> url <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">'?'</span>      <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">!==</span> url<span class="token punctuation">.</span>length <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> url <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">'&amp;'</span>      <span class="token comment" spellcheck="true">// 拼接url</span>      url <span class="token operator">+</span><span class="token operator">=</span> encodeData    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 初始化</span>    xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> url<span class="token punctuation">,</span> <span class="token keyword">async</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 发送请求</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>method <span class="token operator">===</span> <span class="token string">'get'</span><span class="token punctuation">)</span> xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>    <span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// post 方式需要设置请求头</span>      xhr<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">'Content-Type'</span><span class="token punctuation">,</span><span class="token string">'application/x-www-form-urlencoded;charset=UTF-8'</span><span class="token punctuation">)</span>      xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>encodeData<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="18-实现拖拽"><a href="#18-实现拖拽" class="headerlink" title="18.实现拖拽"></a>18.实现拖拽</h3><pre class=" language-js"><code class="language-js">window<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// drag处于绝对定位状态</span>  <span class="token keyword">let</span> drag <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'box'</span><span class="token punctuation">)</span>  drag<span class="token punctuation">.</span>onmousedown <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> e <span class="token operator">=</span> e <span class="token operator">||</span> window<span class="token punctuation">.</span>event    <span class="token comment" spellcheck="true">// 鼠标与拖拽元素边界的距离 = 鼠标与可视区边界的距离 - 拖拽元素与边界的距离</span>    <span class="token keyword">let</span> diffX <span class="token operator">=</span> e<span class="token punctuation">.</span>clientX <span class="token operator">-</span> drag<span class="token punctuation">.</span>offsetLeft    <span class="token keyword">let</span> diffY <span class="token operator">=</span> e<span class="token punctuation">.</span>clientY <span class="token operator">-</span> drag<span class="token punctuation">.</span>offsetTop    drag<span class="token punctuation">.</span>onmousemove <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// 拖拽元素移动的距离 = 鼠标与可视区边界的距离 - 鼠标与拖拽元素边界的距离</span>      <span class="token keyword">let</span> left <span class="token operator">=</span> e<span class="token punctuation">.</span>clientX <span class="token operator">-</span> diffX      <span class="token keyword">let</span> top <span class="token operator">=</span> e<span class="token punctuation">.</span>clientY <span class="token operator">-</span> diffY      <span class="token comment" spellcheck="true">// 避免拖拽出可视区</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        left <span class="token operator">=</span> <span class="token number">0</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">></span> window<span class="token punctuation">.</span>innerWidth <span class="token operator">-</span> drag<span class="token punctuation">.</span>offsetWidth<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        left <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth <span class="token operator">-</span> drag<span class="token punctuation">.</span>offsetWidth      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>top <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        top <span class="token operator">=</span> <span class="token number">0</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>top <span class="token operator">></span> window<span class="token punctuation">.</span>innerHeight <span class="token operator">-</span> drag<span class="token punctuation">.</span>offsetHeight<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        top <span class="token operator">=</span> window<span class="token punctuation">.</span>innerHeight <span class="token operator">-</span> drag<span class="token punctuation">.</span>offsetHeight      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      drag<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token string">'px'</span>      drag<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> top <span class="token operator">+</span> <span class="token string">'px'</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    drag<span class="token punctuation">.</span>onmouseup <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>onmousemove <span class="token operator">=</span> <span class="token keyword">null</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>onmouseup <span class="token operator">=</span> <span class="token keyword">null</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h3 id="19-实现一个节流函数"><a href="#19-实现一个节流函数" class="headerlink" title="19. 实现一个节流函数"></a>19. 实现一个节流函数</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 思路：在规定时间内只触发一次</span><span class="token keyword">function</span> throttle <span class="token punctuation">(</span>fn<span class="token punctuation">,</span> delay<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 利用闭包保存时间</span>  <span class="token keyword">let</span> prev <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> context <span class="token operator">=</span> <span class="token keyword">this</span>    <span class="token keyword">let</span> arg <span class="token operator">=</span> arguments    <span class="token keyword">let</span> now <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>now <span class="token operator">-</span> prev <span class="token operator">>=</span> delay<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      fn<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> arg<span class="token punctuation">)</span>      prev <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">function</span> fn <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'节流'</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'scroll'</span><span class="token punctuation">,</span> <span class="token function">throttle</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h3 id="20-实现一个防抖函数"><a href="#20-实现一个防抖函数" class="headerlink" title="20. 实现一个防抖函数"></a>20. 实现一个防抖函数</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 思路:在规定时间内未触发第二次，则执行</span><span class="token keyword">function</span> debounce <span class="token punctuation">(</span>fn<span class="token punctuation">,</span> delay<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 利用闭包保存定时器</span>  <span class="token keyword">let</span> timer <span class="token operator">=</span> <span class="token keyword">null</span>  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> context <span class="token operator">=</span> <span class="token keyword">this</span>    <span class="token keyword">let</span> arg <span class="token operator">=</span> arguments    <span class="token comment" spellcheck="true">// 在规定时间内再次触发会先清除定时器后再重设定时器</span>    <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span>    timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      fn<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> arg<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">function</span> fn <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'防抖'</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'scroll'</span><span class="token punctuation">,</span> <span class="token function">debounce</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 面试题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>俄罗斯方块源码</title>
      <link href="2020/11/06/e-luo-si-fang-kuai-yuan-ma/"/>
      <url>2020/11/06/e-luo-si-fang-kuai-yuan-ma/</url>
      
        <content type="html"><![CDATA[<h2 id="俄罗斯方块源码"><a href="#俄罗斯方块源码" class="headerlink" title="俄罗斯方块源码"></a>俄罗斯方块源码</h2><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN""http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">    div &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span>block<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span>black<span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span><span class="token property">font</span><span class="token punctuation">:</span><span class="token number">17</span>px Tahoma<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span><span class="token hexcode">#fff</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    span &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">float</span><span class="token punctuation">:</span>left<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span>gray<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">12</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">12</span>px<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span><span class="token number">4</span>px gray outset<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">0</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token property">overflow</span><span class="token punctuation">:</span>hidden<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    p &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">float</span><span class="token punctuation">:</span>left<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">8</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">8</span>px<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span><span class="token number">2</span>px gray outset<span class="token punctuation">;</span><span class="token property">overflow</span><span class="token punctuation">:</span>hidden<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">0</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    #main &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">375</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">430</span>px<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span>block<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span>gray<span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    #body &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">241</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">401</span>px<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span><span class="token number">15</span>px<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span><span class="token number">15</span>px<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid <span class="token hexcode">#999</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    #score &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">80</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">24</span>px<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span><span class="token number">270</span>px<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span><span class="token number">15</span>px<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">4</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    #level &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">80</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">24</span>px<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span><span class="token number">270</span>px<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span><span class="token number">50</span>px<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">4</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    #next &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">50</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">50</span>px<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span><span class="token number">270</span>px<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span><span class="token number">85</span>px<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span><span class="token number">19</span>px black solid<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    #ctrl &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">80</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">55</span>px<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span><span class="token number">270</span>px<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span><span class="token number">360</span>px<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">4</span>px<span class="token punctuation">;</span><span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span>gray&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    #ctrl button&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">80</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">25</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> G <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        fs<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        fn<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        score<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span>        l<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'#9F0'</span><span class="token punctuation">,</span><span class="token string">'#FF3'</span><span class="token punctuation">,</span><span class="token string">'#F33'</span><span class="token punctuation">,</span><span class="token string">'#C0C'</span><span class="token punctuation">,</span><span class="token string">'#33C'</span><span class="token punctuation">,</span><span class="token string">'#0F3'</span><span class="token punctuation">,</span><span class="token string">'#F93'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        v<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">0x801</span><span class="token punctuation">,</span><span class="token number">0x801</span><span class="token punctuation">,</span><span class="token number">0x801</span><span class="token punctuation">,</span><span class="token number">0x801</span><span class="token punctuation">,</span><span class="token number">0x801</span><span class="token punctuation">,</span><span class="token number">0x801</span><span class="token punctuation">,</span><span class="token number">0x801</span><span class="token punctuation">,</span><span class="token number">0x801</span><span class="token punctuation">,</span><span class="token number">0x801</span><span class="token punctuation">,</span><span class="token number">0x801</span><span class="token punctuation">,</span><span class="token number">0x801</span><span class="token punctuation">,</span><span class="token number">0x801</span><span class="token punctuation">,</span><span class="token number">0x801</span><span class="token punctuation">,</span><span class="token number">0x801</span><span class="token punctuation">,</span><span class="token number">0x801</span><span class="token punctuation">,</span><span class="token number">0x801</span><span class="token punctuation">,</span><span class="token number">0x801</span><span class="token punctuation">,</span><span class="token number">0x801</span><span class="token punctuation">,</span><span class="token number">0x801</span><span class="token punctuation">,</span><span class="token number">0xFFFF</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        d<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0xCC00</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0x4444</span><span class="token punctuation">,</span><span class="token number">0xF0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0x8C40</span><span class="token punctuation">,</span><span class="token number">0x6C00</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0x4C80</span><span class="token punctuation">,</span><span class="token number">0xC600</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0x44C0</span><span class="token punctuation">,</span><span class="token number">0x8E00</span><span class="token punctuation">,</span><span class="token number">0xC880</span><span class="token punctuation">,</span><span class="token number">0xE200</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0x88C0</span><span class="token punctuation">,</span><span class="token number">0xE800</span><span class="token punctuation">,</span><span class="token number">0xC440</span><span class="token punctuation">,</span><span class="token number">0x2E00</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0x4E00</span><span class="token punctuation">,</span><span class="token number">0x8C80</span><span class="token punctuation">,</span><span class="token number">0xE400</span><span class="token punctuation">,</span><span class="token number">0x4C40</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        init<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> body <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'body'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> next <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'next'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">240</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                G<span class="token punctuation">.</span>fs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"span"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">16</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                G<span class="token punctuation">.</span>fn<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>next<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"p"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            G<span class="token punctuation">.</span>domScore <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'score'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            G<span class="token punctuation">.</span>domLevel <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'level'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            document<span class="token punctuation">.</span>onkeydown<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>G<span class="token punctuation">.</span><span class="token function">event</span><span class="token punctuation">(</span>e<span class="token operator">||</span>window<span class="token punctuation">.</span>event<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>            G<span class="token punctuation">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            G<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>        timeTesk<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>G<span class="token punctuation">.</span>pause<span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>G<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>G<span class="token punctuation">.</span>x<span class="token punctuation">,</span> G<span class="token punctuation">.</span>y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> G<span class="token punctuation">.</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">var</span> s <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">19</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    G<span class="token punctuation">.</span>v<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>G<span class="token punctuation">.</span>v<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">|</span>G<span class="token punctuation">.</span>m<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>G<span class="token punctuation">.</span>v<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0xFFF</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> k<span class="token operator">=</span>i<span class="token punctuation">;</span>k<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">;</span>k<span class="token operator">--</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                            G<span class="token punctuation">.</span>v<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> G<span class="token punctuation">.</span>v<span class="token punctuation">[</span>k<span class="token number">-1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                        G<span class="token punctuation">.</span>score<span class="token operator">+</span><span class="token operator">=</span><span class="token operator">++</span>s<span class="token punctuation">;</span>                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                G<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            G<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>        move<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> m <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>k<span class="token operator">&lt;</span><span class="token number">4</span><span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                m<span class="token punctuation">[</span>y<span class="token operator">+</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>G<span class="token punctuation">.</span>d<span class="token punctuation">[</span>G<span class="token punctuation">.</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token operator">></span><span class="token operator">></span><span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">-</span>k<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token operator">&amp;</span><span class="token number">0xF</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">&lt;</span>Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token operator">></span><span class="token operator">-</span>Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>m<span class="token punctuation">[</span>y<span class="token operator">+</span>k<span class="token punctuation">]</span> <span class="token operator">&amp;</span> G<span class="token punctuation">.</span>v<span class="token punctuation">[</span>y<span class="token operator">+</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            G<span class="token punctuation">.</span>x <span class="token operator">=</span> x<span class="token punctuation">;</span>            G<span class="token punctuation">.</span>y <span class="token operator">=</span> y<span class="token punctuation">;</span>            G<span class="token punctuation">.</span>t <span class="token operator">=</span> t<span class="token punctuation">;</span>            G<span class="token punctuation">.</span>m <span class="token operator">=</span> m<span class="token punctuation">;</span>            G<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>        rand<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            G<span class="token punctuation">.</span>n <span class="token operator">=</span> G<span class="token punctuation">.</span>_n<span class="token punctuation">;</span>            G<span class="token punctuation">.</span>t <span class="token operator">=</span> G<span class="token punctuation">.</span>_t<span class="token punctuation">;</span>            G<span class="token punctuation">.</span>c <span class="token operator">=</span> G<span class="token punctuation">.</span>_c<span class="token punctuation">;</span>            G<span class="token punctuation">.</span>_n <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span>G<span class="token punctuation">.</span>d<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>            G<span class="token punctuation">.</span>_t <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span>G<span class="token punctuation">.</span>d<span class="token punctuation">[</span>G<span class="token punctuation">.</span>_n<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>            G<span class="token punctuation">.</span>_c <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span>G<span class="token punctuation">.</span>l<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>        next<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            G<span class="token punctuation">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>G<span class="token punctuation">.</span>score<span class="token operator">/</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token operator">!=</span>G<span class="token punctuation">.</span>level<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                G<span class="token punctuation">.</span>level <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>G<span class="token punctuation">.</span>score<span class="token operator">/</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">clearInterval</span><span class="token punctuation">(</span>G<span class="token punctuation">.</span>handle<span class="token punctuation">)</span><span class="token punctuation">;</span>                G<span class="token punctuation">.</span>handle <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token string">"G.timeTesk()"</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token operator">/</span><span class="token punctuation">(</span>G<span class="token punctuation">.</span>level<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            G<span class="token punctuation">.</span>domScore<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'Score:'</span><span class="token operator">+</span>G<span class="token punctuation">.</span>score<span class="token punctuation">;</span>            G<span class="token punctuation">.</span>domLevel<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'Level:'</span><span class="token operator">+</span>G<span class="token punctuation">.</span>level<span class="token punctuation">;</span>            <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>G<span class="token punctuation">.</span>d<span class="token punctuation">[</span>G<span class="token punctuation">.</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>G<span class="token punctuation">.</span>t<span class="token punctuation">]</span><span class="token operator">></span><span class="token operator">></span>i<span class="token operator">*</span><span class="token number">4</span><span class="token operator">&amp;</span><span class="token number">0xF</span><span class="token punctuation">)</span><span class="token punctuation">)</span>i<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>G<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> i<span class="token number">-3</span><span class="token punctuation">,</span> G<span class="token punctuation">.</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'Game over!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">clearInterval</span><span class="token punctuation">(</span>G<span class="token punctuation">.</span>handle<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>        draw<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">240</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>G<span class="token punctuation">.</span>v<span class="token punctuation">[</span><span class="token function">parseInt</span><span class="token punctuation">(</span>i<span class="token operator">/</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token operator">></span><span class="token punctuation">(</span><span class="token number">11</span><span class="token operator">-</span>i<span class="token operator">%</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">0x1</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    G<span class="token punctuation">.</span>fs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>visibility <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>G<span class="token punctuation">.</span>m<span class="token punctuation">[</span><span class="token function">parseInt</span><span class="token punctuation">(</span>i<span class="token operator">/</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token operator">></span><span class="token punctuation">(</span><span class="token number">11</span><span class="token operator">-</span>i<span class="token operator">%</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">0x1</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    G<span class="token punctuation">.</span>fs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>visibility <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>                    G<span class="token punctuation">.</span>fs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>borderColor <span class="token operator">=</span> G<span class="token punctuation">.</span>fs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>background <span class="token operator">=</span> G<span class="token punctuation">.</span>l<span class="token punctuation">[</span>G<span class="token punctuation">.</span>c<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">else</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    G<span class="token punctuation">.</span>fs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>visibility <span class="token operator">=</span><span class="token string">'hidden'</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">16</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>G<span class="token punctuation">.</span>d<span class="token punctuation">[</span>G<span class="token punctuation">.</span>_n<span class="token punctuation">]</span><span class="token punctuation">[</span>G<span class="token punctuation">.</span>_t<span class="token punctuation">]</span><span class="token operator">></span><span class="token operator">></span><span class="token punctuation">(</span><span class="token number">15</span><span class="token operator">-</span>i<span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">0x1</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    G<span class="token punctuation">.</span>fn<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>visibility <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>                    G<span class="token punctuation">.</span>fn<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>borderColor <span class="token operator">=</span> G<span class="token punctuation">.</span>fn<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>background <span class="token operator">=</span> G<span class="token punctuation">.</span>l<span class="token punctuation">[</span>G<span class="token punctuation">.</span>_c<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">else</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    G<span class="token punctuation">.</span>fn<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>visibility <span class="token operator">=</span><span class="token string">'hidden'</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>        event<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">switch</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>keyCode<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token number">37</span><span class="token punctuation">:</span>                    G<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>G<span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> G<span class="token punctuation">.</span>y<span class="token punctuation">,</span> G<span class="token punctuation">.</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token number">39</span><span class="token punctuation">:</span>                    G<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>G<span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> G<span class="token punctuation">.</span>y<span class="token punctuation">,</span> G<span class="token punctuation">.</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token number">38</span><span class="token punctuation">:</span>                    G<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>G<span class="token punctuation">.</span>x<span class="token punctuation">,</span> G<span class="token punctuation">.</span>y<span class="token punctuation">,</span> <span class="token punctuation">(</span>G<span class="token punctuation">.</span>t <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> G<span class="token punctuation">.</span>d<span class="token punctuation">[</span>G<span class="token punctuation">.</span>n<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token number">40</span><span class="token punctuation">:</span>                    G<span class="token punctuation">.</span><span class="token function">timeTesk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token number">32</span><span class="token punctuation">:</span>                    <span class="token keyword">while</span><span class="token punctuation">(</span>G<span class="token punctuation">.</span><span class="token function">timeTesk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">onload</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>G.init();<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>main<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>body<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>score<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>level<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>next<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>ctrl<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:location.href<span class="token punctuation">=</span>location.href;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>New<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:this.innerHTML<span class="token punctuation">=</span>&amp;#123;<span class="token punctuation">'</span>true<span class="token punctuation">'</span>:<span class="token punctuation">'</span>Start<span class="token punctuation">'</span>,<span class="token punctuation">'</span>false<span class="token punctuation">'</span>:<span class="token punctuation">'</span>Pause<span class="token punctuation">'</span>&amp;#125;[G.pause<span class="token punctuation">=</span>!!!G.pause];<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Pause<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 源码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html5 </tag>
            
            <tag> 源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>45个值得收藏的CSS形状</title>
      <link href="2020/11/05/45-ge-zhi-de-shou-cang-de-css-xing-zhuang/"/>
      <url>2020/11/05/45-ge-zhi-de-shou-cang-de-css-xing-zhuang/</url>
      
        <content type="html"><![CDATA[<h1 id="45个值得收藏的CSS形状"><a href="#45个值得收藏的CSS形状" class="headerlink" title="45个值得收藏的CSS形状"></a>45个值得收藏的CSS形状</h1><ul><li><p>CSS能够生成各种形状。正方形和矩形很容易，因为它们是 web的自然形状。添加宽度和高度，就得到了所需的精确大小的矩形。添加边框半径，你就可以把这个形状变成圆形，足够多的边框半径，你就可以把这些矩形变成圆形和椭圆形。</p></li><li><p>我们还可以使用 CSS 伪元素中的 ::before 和::after，这为我们提供了向原始元素添加另外两个形状的可能性。通过巧妙地使用定位、转换和许多其他技巧，我们可以只用一个 HTML元素在 CSS 中创建许多形状。</p></li></ul><blockquote><p>虽然我们现在大都使用字体图标或者svg图片，似乎使用 CSS 来做图标意义不是很大，但怎么实现这些图标用到的一些技巧及思路是很值得我们的学习。</p></blockquote><h2 id="1-正方形"><a href="#1-正方形" class="headerlink" title="1.正方形"></a>1.正方形</h2><hr><p><img src="https://image-static.segmentfault.com/157/049/1570495473-5cb962711c75e_articlex" alt="正方形"></p><pre class=" language-css"><code class="language-css">#square &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="2-长方形"><a href="#2-长方形" class="headerlink" title="2.长方形"></a>2.长方形</h2><hr><p><img src="https://image-static.segmentfault.com/908/278/908278725-5cb9637b3bcf6_articlex" alt="长方形"></p><pre class=" language-css"><code class="language-css">#rectangle &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="3-圆形"><a href="#3-圆形" class="headerlink" title="3.圆形"></a>3.圆形</h2><hr><p><img src="https://image-static.segmentfault.com/125/221/1252216328-5cb9639780f10_articlex" alt="圆形"></p><pre class=" language-css"><code class="language-css">#circle &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50%</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="4-椭圆形"><a href="#4-椭圆形" class="headerlink" title="4.椭圆形"></a>4.椭圆形</h2><hr><p><img src="https://image-static.segmentfault.com/184/279/1842792954-5cb963ce10a73_articlex" alt="椭圆形"></p><pre class=" language-css"><code class="language-css">#oval &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">100</span>px / <span class="token number">50</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="5-上三角"><a href="#5-上三角" class="headerlink" title="5.上三角"></a>5.上三角</h2><hr><p><img src="https://image-static.segmentfault.com/292/510/2925102762-5cb964e328349_articlex" alt="上三角"></p><pre class=" language-css"><code class="language-css">#triangle-up &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">border-left</span><span class="token punctuation">:</span> <span class="token number">50</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-right</span><span class="token punctuation">:</span> <span class="token number">50</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">100</span>px solid red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="6-下三角"><a href="#6-下三角" class="headerlink" title="6.下三角"></a>6.下三角</h2><hr><p><img src="https://image-static.segmentfault.com/184/806/1848066845-5cb9650bda068_articlex" alt="下三角"></p><pre class=" language-css"><code class="language-css">#triangle-down &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">border-left</span><span class="token punctuation">:</span> <span class="token number">50</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-right</span><span class="token punctuation">:</span> <span class="token number">50</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">100</span>px solid red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="7-左三角"><a href="#7-左三角" class="headerlink" title="7.左三角"></a>7.左三角</h2><hr><p><img src="https://image-static.segmentfault.com/155/608/1556080076-5cb96531da1e0_articlex" alt="左三角"></p><pre class=" language-css"><code class="language-css">#triangle-left &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">50</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-right</span><span class="token punctuation">:</span> <span class="token number">100</span>px solid red<span class="token punctuation">;</span>  <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">50</span>px solid transparent<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="8-右三角"><a href="#8-右三角" class="headerlink" title="8.右三角"></a>8.右三角</h2><hr><p><img src="https://image-static.segmentfault.com/408/216/4082161781-5cb9655469bc2_articlex" alt="右三角"></p><pre class=" language-css"><code class="language-css">#triangle-right &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">50</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-left</span><span class="token punctuation">:</span> <span class="token number">100</span>px solid red<span class="token punctuation">;</span>  <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">50</span>px solid transparent<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="9-左上角"><a href="#9-左上角" class="headerlink" title="9.左上角"></a>9.左上角</h2><hr><p><img src="https://image-static.segmentfault.com/404/298/4042989673-5cb966730f716_articlex" alt="左上角"></p><pre class=" language-css"><code class="language-css">#triangle-topleft &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">100</span>px solid red<span class="token punctuation">;</span>  <span class="token property">border-right</span><span class="token punctuation">:</span> <span class="token number">100</span>px solid transparent<span class="token punctuation">;</span></code></pre><h2 id="10-右上角"><a href="#10-右上角" class="headerlink" title="10.右上角"></a>10.右上角</h2><hr><p><img src="https://image-static.segmentfault.com/399/394/3993942954-5cb966b4f2d8e_articlex" alt="右上角"></p><pre class=" language-css"><code class="language-css">#triangle-topright &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">100</span>px solid red<span class="token punctuation">;</span>  <span class="token property">border-left</span><span class="token punctuation">:</span> <span class="token number">100</span>px solid transparent<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="11-左下角"><a href="#11-左下角" class="headerlink" title="11.左下角"></a>11.左下角</h2><hr><p><img src="https://image-static.segmentfault.com/278/803/2788039398-5cb966d123135_articlex" alt="左下角"></p><pre class=" language-css"><code class="language-css">#triangle-bottomleft &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">100</span>px solid red<span class="token punctuation">;</span>  <span class="token property">border-right</span><span class="token punctuation">:</span> <span class="token number">100</span>px solid transparent<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="12-右下角"><a href="#12-右下角" class="headerlink" title="12.右下角"></a>12.右下角</h2><hr><p><img src="https://image-static.segmentfault.com/386/692/3866925240-5cb966ec599da_articlex" alt="右下角"></p><pre class=" language-css"><code class="language-css">#triangle-bottomright &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">100</span>px solid red<span class="token punctuation">;</span>  <span class="token property">border-left</span><span class="token punctuation">:</span> <span class="token number">100</span>px solid transparent<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="13-箭头"><a href="#13-箭头" class="headerlink" title="13.箭头"></a>13.箭头</h2><hr><p><img src="https://image-static.segmentfault.com/216/299/2162993827-5cb9673528e86_articlex" alt="箭头"></p><pre class=" language-css"><code class="language-css">#curvedarrow &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">9</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-right</span><span class="token punctuation">:</span> <span class="token number">9</span>px solid red<span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">10</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">curvedarrow</span><span class="token punctuation">:</span>after &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">0</span> solid transparent<span class="token punctuation">;</span>  <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">3</span>px solid red<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">20</span>px <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> -<span class="token number">12</span>px<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> -<span class="token number">9</span>px<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">12</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">12</span>px<span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">45</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="14-梯形"><a href="#14-梯形" class="headerlink" title="14.梯形"></a>14.梯形</h2><hr><p><img src="https://image-static.segmentfault.com/291/423/2914232682-5cb96755d6d72_articlex" alt="梯形"></p><pre class=" language-css"><code class="language-css">#trapezoid &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">100</span>px solid red<span class="token punctuation">;</span>  <span class="token property">border-left</span><span class="token punctuation">:</span> <span class="token number">25</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-right</span><span class="token punctuation">:</span> <span class="token number">25</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="15-平行四边形"><a href="#15-平行四边形" class="headerlink" title="15.平行四边形"></a>15.平行四边形</h2><hr><p><img src="https://image-static.segmentfault.com/285/037/2850372951-5cb9678f43b40_articlex" alt="平行四边形"></p><pre class=" language-css"><code class="language-css">#parallelogram &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">150</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">skew</span><span class="token punctuation">(</span><span class="token number">20</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="16-星星-6角"><a href="#16-星星-6角" class="headerlink" title="16.星星(6角)"></a>16.星星(6角)</h2><hr><p><img src="https://image-static.segmentfault.com/167/959/1679591297-5cb967c4604cc_articlex" alt="星星(6角)"></p><pre class=" language-css"><code class="language-css">#star-six &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">border-left</span><span class="token punctuation">:</span> <span class="token number">50</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-right</span><span class="token punctuation">:</span> <span class="token number">50</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">100</span>px solid red<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">star-six</span><span class="token punctuation">:</span>after &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">border-left</span><span class="token punctuation">:</span> <span class="token number">50</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-right</span><span class="token punctuation">:</span> <span class="token number">50</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">100</span>px solid red<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> -<span class="token number">50</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="17-星星-5角"><a href="#17-星星-5角" class="headerlink" title="17.星星(5角)"></a>17.星星(5角)</h2><hr><p><img src="https://image-static.segmentfault.com/274/872/2748727213-5cb967ea8917c_articlex" alt="星星(5角)"></p><pre class=" language-css"><code class="language-css">#star-five &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">50</span>px <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span>  <span class="token property">border-right</span><span class="token punctuation">:</span> <span class="token number">100</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">70</span>px solid red<span class="token punctuation">;</span>  <span class="token property">border-left</span><span class="token punctuation">:</span> <span class="token number">100</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">35</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">star-five</span><span class="token punctuation">:</span>before &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">80</span>px solid red<span class="token punctuation">;</span>  <span class="token property">border-left</span><span class="token punctuation">:</span> <span class="token number">30</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-right</span><span class="token punctuation">:</span> <span class="token number">30</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> -<span class="token number">45</span>px<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> -<span class="token number">65</span>px<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>-<span class="token number">35</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">star-five</span><span class="token punctuation">:</span>after &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">3</span>px<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> -<span class="token number">105</span>px<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span>  <span class="token property">border-right</span><span class="token punctuation">:</span> <span class="token number">100</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">70</span>px solid red<span class="token punctuation">;</span>  <span class="token property">border-left</span><span class="token punctuation">:</span> <span class="token number">100</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>-<span class="token number">70</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="18-五边形"><a href="#18-五边形" class="headerlink" title="18.五边形"></a>18.五边形</h2><hr><p><img src="https://image-static.segmentfault.com/263/545/2635456600-5cb968182daf6_articlex" alt="五边形"></p><pre class=" language-css"><code class="language-css">#pentagon &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">54</span>px<span class="token punctuation">;</span>  <span class="token property">box-sizing</span><span class="token punctuation">:</span> content-box<span class="token punctuation">;</span>  <span class="token property">border-width</span><span class="token punctuation">:</span> <span class="token number">50</span>px <span class="token number">18</span>px <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">border-style</span><span class="token punctuation">:</span> solid<span class="token punctuation">;</span>  <span class="token property">border-color</span><span class="token punctuation">:</span> red transparent<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">pentagon</span><span class="token punctuation">:</span>before &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> -<span class="token number">85</span>px<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> -<span class="token number">18</span>px<span class="token punctuation">;</span>  <span class="token property">border-width</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">45</span>px <span class="token number">35</span>px<span class="token punctuation">;</span>  <span class="token property">border-style</span><span class="token punctuation">:</span> solid<span class="token punctuation">;</span>  <span class="token property">border-color</span><span class="token punctuation">:</span> transparent transparent red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="19-六边形"><a href="#19-六边形" class="headerlink" title="19.六边形"></a>19.六边形</h2><hr><p><img src="https://image-static.segmentfault.com/271/774/2717748199-5cb96833dbece_articlex" alt="六边形"></p><pre class=" language-css"><code class="language-css">#hexagon &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">55</span>px<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">hexagon</span><span class="token punctuation">:</span>before &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> -<span class="token number">25</span>px<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">border-left</span><span class="token punctuation">:</span> <span class="token number">50</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-right</span><span class="token punctuation">:</span> <span class="token number">50</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">25</span>px solid red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">hexagon</span><span class="token punctuation">:</span>after &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">bottom</span><span class="token punctuation">:</span> -<span class="token number">25</span>px<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">border-left</span><span class="token punctuation">:</span> <span class="token number">50</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-right</span><span class="token punctuation">:</span> <span class="token number">50</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">25</span>px solid red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="20-八边形"><a href="#20-八边形" class="headerlink" title="20.八边形"></a>20.八边形</h2><hr><p><img src="https://image-static.segmentfault.com/840/041/840041226-5cb96856aae86_articlex" alt="八边形"></p><pre class=" language-css"><code class="language-css">#octagon &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">octagon</span><span class="token punctuation">:</span>before &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">29</span>px solid red<span class="token punctuation">;</span>  <span class="token property">border-left</span><span class="token punctuation">:</span> <span class="token number">29</span>px solid <span class="token hexcode">#eee</span><span class="token punctuation">;</span>  <span class="token property">border-right</span><span class="token punctuation">:</span> <span class="token number">29</span>px solid <span class="token hexcode">#eee</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">octagon</span><span class="token punctuation">:</span>after &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">29</span>px solid red<span class="token punctuation">;</span>  <span class="token property">border-left</span><span class="token punctuation">:</span> <span class="token number">29</span>px solid <span class="token hexcode">#eee</span><span class="token punctuation">;</span>  <span class="token property">border-right</span><span class="token punctuation">:</span> <span class="token number">29</span>px solid <span class="token hexcode">#eee</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="21-爱心"><a href="#21-爱心" class="headerlink" title="21.爱心"></a>21.爱心</h2><hr><p><img src="https://image-static.segmentfault.com/180/459/1804591996-5cb96876efb70_articlex" alt="爱心"></p><pre class=" language-css"><code class="language-css">#heart &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">90</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">heart</span><span class="token punctuation">:</span>before,#<span class="token property">heart</span><span class="token punctuation">:</span>after &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">80</span>px<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50</span>px <span class="token number">50</span>px <span class="token number">0</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>-<span class="token number">45</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">transform-origin</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">100%</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">heart</span><span class="token punctuation">:</span>after &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">45</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">transform-origin</span><span class="token punctuation">:</span> <span class="token number">100%</span> <span class="token number">100%</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="22-无穷大"><a href="#22-无穷大" class="headerlink" title="22.无穷大"></a>22.无穷大</h2><hr><p><img src="https://image-static.segmentfault.com/810/827/810827033-5cb968c50f28a_articlex" alt="无穷大"></p><pre class=" language-css"><code class="language-css">#infinity &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">212</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">box-sizing</span><span class="token punctuation">:</span> content-box<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">infinity</span><span class="token punctuation">:</span>before,#<span class="token property">infinity</span><span class="token punctuation">:</span>after &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token property">box-sizing</span><span class="token punctuation">:</span> content-box<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">60</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">60</span>px<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">20</span>px solid red<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50</span>px <span class="token number">50</span>px <span class="token number">0</span> <span class="token number">50</span>px<span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>-<span class="token number">45</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">infinity</span><span class="token punctuation">:</span>after &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>  <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50</span>px <span class="token number">50</span>px <span class="token number">50</span>px <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">45</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="23-菱形"><a href="#23-菱形" class="headerlink" title="23.菱形"></a>23.菱形</h2><hr><p><img src="https://image-static.segmentfault.com/398/929/3989294895-5cb968e2ddb9f_articlex" alt="菱形"></p><pre class=" language-css"><code class="language-css">#diamond &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">50</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-bottom-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> -<span class="token number">50</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">diamond</span><span class="token punctuation">:</span>after &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> -<span class="token number">50</span>px<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">50</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-top-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="24-钻石"><a href="#24-钻石" class="headerlink" title="24.钻石"></a>24.钻石</h2><hr><p><img src="https://image-static.segmentfault.com/131/390/1313903104-5cb968fcb70cf_articlex" alt="钻石"></p><pre class=" language-css"><code class="language-css">#diamond-shield &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">50</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">20</span>px solid red<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> -<span class="token number">50</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">diamond-shield</span><span class="token punctuation">:</span>after &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> -<span class="token number">50</span>px<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">50</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">70</span>px solid red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="25-钻戒"><a href="#25-钻戒" class="headerlink" title="25.钻戒"></a>25.钻戒</h2><hr><p><img src="https://image-static.segmentfault.com/275/172/2751724698-5cb96919da254_articlex" alt="钻戒"></p><pre class=" language-css"><code class="language-css">#diamond-narrow &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">50</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">70</span>px solid red<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> -<span class="token number">50</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">diamond-narrow</span><span class="token punctuation">:</span>after &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> -<span class="token number">50</span>px<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">70</span>px<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">50</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">70</span>px solid red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="26-钻石2"><a href="#26-钻石2" class="headerlink" title="26.钻石2"></a>26.钻石2</h2><hr><p><img src="https://image-static.segmentfault.com/959/441/959441160-5cb9694bae7ba_articlex" alt="钻石2"></p><pre class=" language-css"><code class="language-css">#cut-diamond &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">border-style</span><span class="token punctuation">:</span> solid<span class="token punctuation">;</span>  <span class="token property">border-color</span><span class="token punctuation">:</span> transparent transparent red transparent<span class="token punctuation">;</span>  <span class="token property">border-width</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">25</span>px <span class="token number">25</span>px <span class="token number">25</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>  <span class="token property">box-sizing</span><span class="token punctuation">:</span> content-box<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">20</span>px <span class="token number">0</span> <span class="token number">50</span>px <span class="token number">0</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">cut-diamond</span><span class="token punctuation">:</span>after &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">25</span>px<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> -<span class="token number">25</span>px<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">border-style</span><span class="token punctuation">:</span> solid<span class="token punctuation">;</span>  <span class="token property">border-color</span><span class="token punctuation">:</span> red transparent transparent transparent<span class="token punctuation">;</span>  <span class="token property">border-width</span><span class="token punctuation">:</span> <span class="token number">70</span>px <span class="token number">50</span>px <span class="token number">0</span> <span class="token number">50</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="27-蛋蛋"><a href="#27-蛋蛋" class="headerlink" title="27.蛋蛋"></a>27.蛋蛋</h2><hr><p><img src="https://image-static.segmentfault.com/450/359/450359456-5cb96972355c4_articlex" alt="蛋蛋"></p><pre class=" language-css"><code class="language-css">#egg &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">126</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">180</span>px<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50%</span> <span class="token number">50%</span> <span class="token number">50%</span> <span class="token number">50%</span> / <span class="token number">60%</span> <span class="token number">60%</span> <span class="token number">40%</span> <span class="token number">40%</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="28-吃豆人"><a href="#28-吃豆人" class="headerlink" title="28.吃豆人"></a>28.吃豆人</h2><hr><p><img src="https://image-static.segmentfault.com/921/738/921738237-5cb969a70bd83_articlex" alt="吃豆人"></p><pre class=" language-css"><code class="language-css">#pacman &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span>  <span class="token property">border-right</span><span class="token punctuation">:</span> <span class="token number">60</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">60</span>px solid red<span class="token punctuation">;</span>  <span class="token property">border-left</span><span class="token punctuation">:</span> <span class="token number">60</span>px solid red<span class="token punctuation">;</span>  <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">60</span>px solid red<span class="token punctuation">;</span>  <span class="token property">border-top-left-radius</span><span class="token punctuation">:</span> <span class="token number">60</span>px<span class="token punctuation">;</span>  <span class="token property">border-top-right-radius</span><span class="token punctuation">:</span> <span class="token number">60</span>px<span class="token punctuation">;</span>  <span class="token property">border-bottom-left-radius</span><span class="token punctuation">:</span> <span class="token number">60</span>px<span class="token punctuation">;</span>  <span class="token property">border-bottom-right-radius</span><span class="token punctuation">:</span> <span class="token number">60</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="29-对话泡泡"><a href="#29-对话泡泡" class="headerlink" title="29.对话泡泡"></a>29.对话泡泡</h2><hr><p><img src="https://image-static.segmentfault.com/224/622/2246224062-5cb969cb3d231_articlex" alt="对话泡泡"></p><pre class=" language-css"><code class="language-css">#talkbubble &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">120</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">80</span>px<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">-moz-border-radius</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>  <span class="token property">-webkit-border-radius</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">talkbubble</span><span class="token punctuation">:</span>before &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">26</span>px<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">13</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-right</span><span class="token punctuation">:</span> <span class="token number">26</span>px solid red<span class="token punctuation">;</span>  <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">13</span>px solid transparent<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="30-12点-爆发"><a href="#30-12点-爆发" class="headerlink" title="30.12点 爆发"></a>30.12点 爆发</h2><hr><p><img src="https://image-static.segmentfault.com/166/699/1666997214-5cb96a042b082_articlex" alt="12点 爆发"></p><pre class=" language-css"><code class="language-css">#burst-<span class="token number">12</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">80</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">80</span>px<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">burst-12</span><span class="token punctuation">:</span>before,#<span class="token property">burst-12</span><span class="token punctuation">:</span>after &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">80</span>px<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">80</span>px<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">burst-12</span><span class="token punctuation">:</span>before &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">30</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">burst-12</span><span class="token punctuation">:</span>after &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">60</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="31-8点-爆发"><a href="#31-8点-爆发" class="headerlink" title="31.8点 爆发"></a>31.8点 爆发</h2><hr><p><img src="https://image-static.segmentfault.com/332/978/3329783574-5cb96b5a62619_articlex" alt="8点 爆发"></p><pre class=" language-css"><code class="language-css">#burst-<span class="token number">8</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">80</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">80</span>px<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">20</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">burst-8</span><span class="token punctuation">:</span>before &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">80</span>px<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">80</span>px<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">135</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="32-太极"><a href="#32-太极" class="headerlink" title="32.太极"></a>32.太极</h2><hr><p><img src="https://image-static.segmentfault.com/183/101/1831012853-5cb96b75ba1d9_articlex" alt="太极"></p><pre class=" language-css"><code class="language-css">#yin-yang &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">96</span>px<span class="token punctuation">;</span>  <span class="token property">box-sizing</span><span class="token punctuation">:</span> content-box<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">48</span>px<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#eee</span><span class="token punctuation">;</span>  <span class="token property">border-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">border-style</span><span class="token punctuation">:</span> solid<span class="token punctuation">;</span>  <span class="token property">border-width</span><span class="token punctuation">:</span> <span class="token number">2</span>px <span class="token number">2</span>px <span class="token number">50</span>px <span class="token number">2</span>px<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">yin-yang</span><span class="token punctuation">:</span>before &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#eee</span><span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">18</span>px solid red<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">12</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">12</span>px<span class="token punctuation">;</span>  <span class="token property">box-sizing</span><span class="token punctuation">:</span> content-box<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">yin-yang</span><span class="token punctuation">:</span>after &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">18</span>px solid <span class="token hexcode">#eee</span><span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">12</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">12</span>px<span class="token punctuation">;</span>  <span class="token property">box-sizing</span><span class="token punctuation">:</span> content-box<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="33-徽章丝带"><a href="#33-徽章丝带" class="headerlink" title="33.徽章丝带"></a>33.徽章丝带</h2><hr><p><img src="https://image-static.segmentfault.com/223/358/2233585292-5cb96c8e4db0f_articlex" alt="徽章丝带"></p><pre class=" language-css"><code class="language-css"><span class="token hexcode">#bad</span>ge-ribbon &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">badge-ribbon</span><span class="token punctuation">:</span>before,#<span class="token property">badge-ribbon</span><span class="token punctuation">:</span>after &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">70</span>px solid red<span class="token punctuation">;</span>  <span class="token property">border-left</span><span class="token punctuation">:</span> <span class="token number">40</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-right</span><span class="token punctuation">:</span> <span class="token number">40</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">70</span>px<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> -<span class="token number">10</span>px<span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>-<span class="token number">140</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">badge-ribbon</span><span class="token punctuation">:</span>after &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>  <span class="token property">right</span><span class="token punctuation">:</span> -<span class="token number">10</span>px<span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">140</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="34-太空入侵者-电脑游戏名"><a href="#34-太空入侵者-电脑游戏名" class="headerlink" title="34.太空入侵者(电脑游戏名)"></a>34.太空入侵者(电脑游戏名)</h2><hr><p><img src="https://image-static.segmentfault.com/189/291/1892914985-5cb96cb48ee14_articlex" alt="太空入侵者(电脑游戏名)"></p><pre class=" language-css"><code class="language-css">#space-invader &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">1</span>em red,  <span class="token number">0</span> <span class="token number">1</span>em <span class="token number">0</span> <span class="token number">1</span>em red,  -<span class="token number">2.5</span>em <span class="token number">1.5</span>em <span class="token number">0</span> <span class="token number">.5</span>em red,  <span class="token number">2.5</span>em <span class="token number">1.5</span>em <span class="token number">0</span> <span class="token number">.5</span>em red,  -<span class="token number">3</span>em -<span class="token number">3</span>em <span class="token number">0</span> <span class="token number">0</span> red,  <span class="token number">3</span>em -<span class="token number">3</span>em <span class="token number">0</span> <span class="token number">0</span> red,  -<span class="token number">2</span>em -<span class="token number">2</span>em <span class="token number">0</span> <span class="token number">0</span> red,  <span class="token number">2</span>em -<span class="token number">2</span>em <span class="token number">0</span> <span class="token number">0</span> red,  -<span class="token number">3</span>em -<span class="token number">1</span>em <span class="token number">0</span> <span class="token number">0</span> red,  -<span class="token number">2</span>em -<span class="token number">1</span>em <span class="token number">0</span> <span class="token number">0</span> red,  <span class="token number">2</span>em -<span class="token number">1</span>em <span class="token number">0</span> <span class="token number">0</span> red,  <span class="token number">3</span>em -<span class="token number">1</span>em <span class="token number">0</span> <span class="token number">0</span> red,  -<span class="token number">4</span>em <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> red,  -<span class="token number">3</span>em <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> red,  <span class="token number">3</span>em <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> red,  <span class="token number">4</span>em <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> red,  -<span class="token number">5</span>em <span class="token number">1</span>em <span class="token number">0</span> <span class="token number">0</span> red,  -<span class="token number">4</span>em <span class="token number">1</span>em <span class="token number">0</span> <span class="token number">0</span> red,  <span class="token number">4</span>em <span class="token number">1</span>em <span class="token number">0</span> <span class="token number">0</span> red,  <span class="token number">5</span>em <span class="token number">1</span>em <span class="token number">0</span> <span class="token number">0</span> red,  -<span class="token number">5</span>em <span class="token number">2</span>em <span class="token number">0</span> <span class="token number">0</span> red,  <span class="token number">5</span>em <span class="token number">2</span>em <span class="token number">0</span> <span class="token number">0</span> red,  -<span class="token number">5</span>em <span class="token number">3</span>em <span class="token number">0</span> <span class="token number">0</span> red,  -<span class="token number">3</span>em <span class="token number">3</span>em <span class="token number">0</span> <span class="token number">0</span> red,  <span class="token number">3</span>em <span class="token number">3</span>em <span class="token number">0</span> <span class="token number">0</span> red,  <span class="token number">5</span>em <span class="token number">3</span>em <span class="token number">0</span> <span class="token number">0</span> red,  -<span class="token number">2</span>em <span class="token number">4</span>em <span class="token number">0</span> <span class="token number">0</span> red,  -<span class="token number">1</span>em <span class="token number">4</span>em <span class="token number">0</span> <span class="token number">0</span> red,  <span class="token number">1</span>em <span class="token number">4</span>em <span class="token number">0</span> <span class="token number">0</span> red,  <span class="token number">2</span>em <span class="token number">4</span>em <span class="token number">0</span> <span class="token number">0</span> red<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">1</span>em<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">1</span>em<span class="token punctuation">;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">50</span>px <span class="token number">0</span> <span class="token number">70</span>px <span class="token number">65</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="35-电视"><a href="#35-电视" class="headerlink" title="35.电视"></a>35.电视</h2><hr><p><img src="https://image-static.segmentfault.com/108/789/1087893413-5cb96ce90362e_articlex" alt="电视"></p><pre class=" language-css"><code class="language-css">#tv &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">150</span>px<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">20</span>px <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50%</span> / <span class="token number">10%</span><span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">text-indent</span><span class="token punctuation">:</span> <span class="token number">.1</span>em<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">tv</span><span class="token punctuation">:</span>before &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">10%</span><span class="token punctuation">;</span>  <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">10%</span><span class="token punctuation">;</span>  <span class="token property">right</span><span class="token punctuation">:</span> -<span class="token number">5%</span><span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> -<span class="token number">5%</span><span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">5%</span> / <span class="token number">50%</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="36-雪佛龙"><a href="#36-雪佛龙" class="headerlink" title="36.雪佛龙"></a>36.雪佛龙</h2><hr><p><img src="https://image-static.segmentfault.com/270/471/270471745-5cb96d16dd378_articlex" alt="雪佛龙"></p><pre class=" language-css"><code class="language-css">#chevron &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">12</span>px<span class="token punctuation">;</span>  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">6</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">60</span>px<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">chevron</span><span class="token punctuation">:</span>before &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">51%</span><span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">skew</span><span class="token punctuation">(</span><span class="token number">0</span>deg, <span class="token number">6</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">chevron</span><span class="token punctuation">:</span>after &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">skew</span><span class="token punctuation">(</span><span class="token number">0</span>deg, -<span class="token number">6</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="37-放大镜"><a href="#37-放大镜" class="headerlink" title="37.放大镜"></a>37.放大镜</h2><hr><p><img src="https://image-static.segmentfault.com/249/042/2490424607-5cb96d373d8a3_articlex" alt="放大镜"></p><pre class=" language-css"><code class="language-css">#magnifying-glass &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">10</span>em<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0.4</span>em<span class="token punctuation">;</span>  <span class="token property">box-sizing</span><span class="token punctuation">:</span> content-box<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0.4</span>em<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">0.1</span>em solid red<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">0.35</span>em<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">magnifying-glass</span><span class="token punctuation">:</span>before &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">right</span><span class="token punctuation">:</span> -<span class="token number">0.25</span>em<span class="token punctuation">;</span>  <span class="token property">bottom</span><span class="token punctuation">:</span> -<span class="token number">0.1</span>em<span class="token punctuation">;</span>  <span class="token property">border-width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0.35</span>em<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0.08</span>em<span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">45</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="38-Facebook图标"><a href="#38-Facebook图标" class="headerlink" title="38.Facebook图标"></a>38.Facebook图标</h2><hr><p><img src="https://image-static.segmentfault.com/266/303/2663038236-5cb96d5d51c04_articlex" alt="Facebook图标"></p><pre class=" language-css"><code class="language-css"><span class="token hexcode">#faceb</span>ook-icon &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">text-indent</span><span class="token punctuation">:</span> -<span class="token number">999</span>em<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">110</span>px<span class="token punctuation">;</span>  <span class="token property">box-sizing</span><span class="token punctuation">:</span> content-box<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">15</span>px solid red<span class="token punctuation">;</span>  <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">facebook-icon</span><span class="token punctuation">:</span>before &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">"/20"</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">90</span>px<span class="token punctuation">;</span>  <span class="token property">bottom</span><span class="token punctuation">:</span> -<span class="token number">30</span>px<span class="token punctuation">;</span>  <span class="token property">right</span><span class="token punctuation">:</span> -<span class="token number">37</span>px<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">20</span>px solid <span class="token hexcode">#eee</span><span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">25</span>px<span class="token punctuation">;</span>  <span class="token property">box-sizing</span><span class="token punctuation">:</span> content-box<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">facebook-icon</span><span class="token punctuation">:</span>after &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">"/20"</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">55</span>px<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#eee</span><span class="token punctuation">;</span>  <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span>  <span class="token property">box-sizing</span><span class="token punctuation">:</span> content-box<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="39-月亮"><a href="#39-月亮" class="headerlink" title="39.月亮"></a>39.月亮</h2><hr><p><img src="https://image-static.segmentfault.com/190/008/1900083338-5cb96d88145d3_articlex" alt="月亮"></p><pre class=" language-css"><code class="language-css">#moon &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">80</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">80</span>px<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>  <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">15</span>px <span class="token number">15</span>px <span class="token number">0</span> <span class="token number">0</span> red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="40-旗"><a href="#40-旗" class="headerlink" title="40.旗"></a>40.旗</h2><hr><p><img src="https://image-static.segmentfault.com/144/265/1442659410-5cb96dabef72a_articlex" alt="旗"></p><pre class=" language-css"><code class="language-css">#flag &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">110</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">56</span>px<span class="token punctuation">;</span>  <span class="token property">box-sizing</span><span class="token punctuation">:</span> content-box<span class="token punctuation">;</span>  <span class="token property">padding-top</span><span class="token punctuation">:</span> <span class="token number">15</span>px<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">11</span>px<span class="token punctuation">;</span>  <span class="token property">letter-spacing</span><span class="token punctuation">:</span> <span class="token number">0.2</span>em<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">text-transform</span><span class="token punctuation">:</span> uppercase<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">flag</span><span class="token punctuation">:</span>after &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">13</span>px solid <span class="token hexcode">#eee</span><span class="token punctuation">;</span>  <span class="token property">border-left</span><span class="token punctuation">:</span> <span class="token number">55</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-right</span><span class="token punctuation">:</span> <span class="token number">55</span>px solid transparent<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="41-圆锥"><a href="#41-圆锥" class="headerlink" title="41.圆锥"></a>41.圆锥</h2><hr><p><img src="https://image-static.segmentfault.com/313/905/3139051416-5cb96dcec776e_articlex" alt="圆锥"></p><pre class=" language-css"><code class="language-css">#cone &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">border-left</span><span class="token punctuation">:</span> <span class="token number">70</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-right</span><span class="token punctuation">:</span> <span class="token number">70</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">100</span>px solid red<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="42-十字架"><a href="#42-十字架" class="headerlink" title="42.十字架"></a>42.十字架</h2><hr><p><img src="https://image-static.segmentfault.com/405/126/4051268922-5cb96deb45da7_articlex" alt="十字架"></p><pre class=" language-css"><code class="language-css">#cross &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">cross</span><span class="token punctuation">:</span>after &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> -<span class="token number">40</span>px<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="43-根基"><a href="#43-根基" class="headerlink" title="43.根基"></a>43.根基</h2><hr><p><img src="https://image-static.segmentfault.com/222/064/2220648895-5cb96e0feb1b9_articlex" alt="根基"></p><pre class=" language-css"><code class="language-css">#base &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">55</span>px<span class="token punctuation">;</span>  <span class="token property">margin-left</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">55</span>px<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">base</span><span class="token punctuation">:</span>before &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">35</span>px solid red<span class="token punctuation">;</span>  <span class="token property">border-left</span><span class="token punctuation">:</span> <span class="token number">50</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-right</span><span class="token punctuation">:</span> <span class="token number">50</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> -<span class="token number">35</span>px<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span></code></pre><h2 id="44-指示器"><a href="#44-指示器" class="headerlink" title="44.指示器"></a>44.指示器</h2><hr><p><img src="https://image-static.segmentfault.com/428/037/4280372318-5cb96e2d32c4e_articlex" alt="指示器"></p><pre class=" language-css"><code class="language-css">#pointer &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">pointer</span><span class="token punctuation">:</span>after &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">border-left</span><span class="token punctuation">:</span> <span class="token number">20</span>px solid white<span class="token punctuation">;</span>  <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">20</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">20</span>px solid transparent<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">pointer</span><span class="token punctuation">:</span>before &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">right</span><span class="token punctuation">:</span> -<span class="token number">20</span>px<span class="token punctuation">;</span>  <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">border-left</span><span class="token punctuation">:</span> <span class="token number">20</span>px solid red<span class="token punctuation">;</span>  <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">20</span>px solid transparent<span class="token punctuation">;</span>  <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">20</span>px solid transparent<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="45-锁"><a href="#45-锁" class="headerlink" title="45.锁"></a>45.锁</h2><hr><p><img src="https://image-static.segmentfault.com/151/414/151414238-5cb96e944c548_articlex" alt="锁"></p><pre class=" language-css"><code class="language-css">#lock &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">8</span>px<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">18</span>em<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">13</span>em<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">2</span>em<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">10</span>em<span class="token punctuation">;</span>  <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">3.5</span>em solid red<span class="token punctuation">;</span>  <span class="token property">border-right-width</span><span class="token punctuation">:</span> <span class="token number">7.5</span>em<span class="token punctuation">;</span>  <span class="token property">border-left-width</span><span class="token punctuation">:</span> <span class="token number">7.5</span>em<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">6</span>rem <span class="token number">0</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">lock</span><span class="token punctuation">:</span>before &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">2.5</span>em solid red<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">14</span>em<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">12</span>em<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>  <span class="token property">margin-left</span><span class="token punctuation">:</span> -<span class="token number">7</span>em<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> -<span class="token number">12</span>em<span class="token punctuation">;</span>  <span class="token property">border-top-left-radius</span><span class="token punctuation">:</span> <span class="token number">7</span>em<span class="token punctuation">;</span>  <span class="token property">border-top-right-radius</span><span class="token punctuation">:</span> <span class="token number">7</span>em<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>#<span class="token property">lock</span><span class="token punctuation">:</span>after &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>em solid red<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">5</span>em<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">8</span>em<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">2.5</span>em<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> -<span class="token number">1</span>em<span class="token punctuation">;</span>  <span class="token property">margin-left</span><span class="token punctuation">:</span> -<span class="token number">2.5</span>em<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><p>原文: <a href="https://css-tricks.com/the-shapes-of-css/">https://css-tricks.com/the-shapes-of-css/</a></p>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>贪吃蛇源码</title>
      <link href="2020/11/05/tan-chi-she-yuan-ma/"/>
      <url>2020/11/05/tan-chi-she-yuan-ma/</url>
      
        <content type="html"><![CDATA[<h2 id="贪吃蛇源码"><a href="#贪吃蛇源码" class="headerlink" title="贪吃蛇源码"></a>贪吃蛇源码</h2><h3 id="body部分"><a href="#body部分" class="headerlink" title="body部分"></a>body部分</h3><pre class=" language-html"><code class="language-html"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>贪吃蛇游戏<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!-- 记录吃了多少个蛋 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">20</span>px<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span>red</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span> score:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>score<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span>black</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!-- 暂停按钮 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Pause<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Pause<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!-- 开始按钮 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Start<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Start<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!-- 刷新(重新开始游戏) --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Refresh<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Refresh<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!-- 加速按钮 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Speed<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Speed<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!-- 贪吃蛇的行走路径地图 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>snake_map<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><h3 id="style样式部分"><a href="#style样式部分" class="headerlink" title="style样式部分"></a>style样式部分</h3><pre class=" language-css"><code class="language-css">&lt;style media=<span class="token string">"screen"</span>>      * &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>      &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>      <span class="token number">.</span>wrap &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">600</span>px<span class="token punctuation">;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>        <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>      &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>      p &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">65%</span><span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">10%</span><span class="token punctuation">;</span>      &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>      h<span class="token number">1</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>        <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>      &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>      #score &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>        <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>      &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>      #snake_map &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid skyblue<span class="token punctuation">;</span>      &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">/*行样式*/</span>      <span class="token number">.</span>row &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>      &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">/*列样式*/</span>      <span class="token number">.</span>col &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>        <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid lightgray<span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span><span class="token number">250</span>, <span class="token number">250</span>, <span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>      &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>      <span class="token number">.</span>activeSnake &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>      &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>      <span class="token number">.</span>egg &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>      &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>      #Pause &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>        <span class="token property">margin-left</span><span class="token punctuation">:</span> <span class="token number">18%</span><span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid skyblue<span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>        <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span>      &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>      #Start ,  #Refresh, #Speed&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid skyblue<span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span>        <span class="token property">margin-left</span><span class="token punctuation">:</span> <span class="token number">15</span>px<span class="token punctuation">;</span>      &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    &lt;/style></code></pre><h3 id="javasript部分"><a href="#javasript部分" class="headerlink" title="javasript部分"></a>javasript部分</h3><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span>    <span class="token comment" spellcheck="true">//获取分数标签</span>    <span class="token keyword">var</span> score <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'score'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//获取路径地图标签</span>    <span class="token keyword">var</span> map <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'snake_map'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//为了灵活的设置地图的大小,以下设置两个变量</span>    <span class="token comment" spellcheck="true">//用于存储行数和列数(即方格的个数)</span>    <span class="token keyword">var</span> rowNumber <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//行数</span>    <span class="token keyword">var</span> columnNumber <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//列数;</span>    <span class="token keyword">var</span> mapWidth <span class="token operator">=</span> columnNumber <span class="token operator">*</span> <span class="token number">20</span> <span class="token operator">+</span><span class="token string">'px'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//地图的宽</span>    <span class="token keyword">var</span> mapHeight <span class="token operator">=</span> rowNumber <span class="token operator">*</span> <span class="token number">20</span> <span class="token operator">+</span><span class="token string">'px'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//地图的高</span>    map<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width <span class="token operator">=</span> mapWidth<span class="token punctuation">;</span>    map<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> mapHeight<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置地图宽高</span>    <span class="token comment" spellcheck="true">//创建一个二维数组,用来记录地图上的所有div的位置</span>    <span class="token keyword">var</span> snakeDIVPosition <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//通过双层for循环来创建地图元素</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> rowNumber<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//创建行div</span>      <span class="token keyword">var</span> rowDIV <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//设置div样式</span>      rowDIV<span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'row'</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//将行div添加到路径地图map中</span>      map<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>rowDIV<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//创建一个行级数组,用来存储当前行中的每个方块div</span>      <span class="token keyword">var</span> rowArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> columnNumber<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//创建每一行中的方块div</span>        <span class="token keyword">var</span> columnDIV <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置css样式</span>        columnDIV<span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'col'</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//将方块DIV添加到当前行中</span>        rowDIV<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>columnDIV<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//同时将方块添加到行数组中</span>        rowArray<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>columnDIV<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//当前内层循环结束,将行数组添加到二维数组中</span>      snakeDIVPosition<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>rowArray<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//创建蛇模型</span>    <span class="token comment" spellcheck="true">//创建一个一维数组,用来存储蛇身所占的div</span>    <span class="token keyword">var</span> snake <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//固定蛇身起始长度为3个div</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//为蛇身设置不同颜色的div</span>      snakeDIVPosition<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'col activeSnake'</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//存储在蛇身数组中</span>      snake<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> snakeDIVPosition<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//定义变量来控制蛇</span>    <span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//蛇头的起始位置偏移量</span>    <span class="token keyword">var</span> scoreCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//分数计数器,即吃了多少个蛋</span>    <span class="token keyword">var</span> eggX <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//记录蛋所在的行位置</span>    <span class="token keyword">var</span> eggY <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//记录蛋所在的列位置;</span>    <span class="token keyword">var</span> direction <span class="token operator">=</span> <span class="token string">'right'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//记录蛇移动的方向,初始为向右</span>    <span class="token keyword">var</span> changeDir <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//判断是否需要改变蛇的移动方向</span>    <span class="token keyword">var</span> delayTimer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//延迟定时器</span>    <span class="token comment" spellcheck="true">//添加键盘事件监听方向键来改变蛇的移动方向</span>    document<span class="token punctuation">.</span>onkeydown <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//先判断是否需要改变方向,true表示需要,false表示不需要</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>changeDir<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//return空表示直接结束函数,后续代码不执行</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      event <span class="token operator">=</span> event <span class="token operator">||</span> window<span class="token punctuation">.</span>event<span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//为了合理处理蛇的移动,需要判断蛇头和蛇身</span>      <span class="token comment" spellcheck="true">//假设蛇向右移动,点方向键左,右键都不需要做出响应</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>direction <span class="token operator">==</span> <span class="token string">'right'</span> <span class="token operator">&amp;&amp;</span> event<span class="token punctuation">.</span>keyCode <span class="token operator">==</span> <span class="token number">37</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//终止事件执行</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>direction <span class="token operator">==</span> <span class="token string">'left'</span> <span class="token operator">&amp;&amp;</span> event<span class="token punctuation">.</span>keyCode <span class="token operator">==</span> <span class="token number">39</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>direction <span class="token operator">==</span> <span class="token string">'up'</span> <span class="token operator">&amp;&amp;</span> event<span class="token punctuation">.</span>keyCode <span class="token operator">==</span> <span class="token number">40</span> <span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>direction <span class="token operator">==</span> <span class="token string">'down'</span> <span class="token operator">&amp;&amp;</span> event<span class="token punctuation">.</span>keyCode <span class="token operator">==</span> <span class="token number">38</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          <span class="token keyword">return</span><span class="token punctuation">;</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//我们通过keyCode确定蛇要移动的方向</span>      <span class="token keyword">switch</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>keyCode<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">37</span><span class="token punctuation">:</span>          direction <span class="token operator">=</span> <span class="token string">'left'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//向左</span>          <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">38</span><span class="token punctuation">:</span>          direction <span class="token operator">=</span> <span class="token string">'up'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//向上;</span>          <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">39</span><span class="token punctuation">:</span>          direction <span class="token operator">=</span> <span class="token string">'right'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//向右</span>          <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">40</span><span class="token punctuation">:</span>          direction <span class="token operator">=</span> <span class="token string">'down'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//向下</span>          <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      changeDir <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      delayTimer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置是否需要改变方向</span>        changeDir <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 开始设置蛇移动逻辑</span>    <span class="token comment" spellcheck="true">//蛇移动函数</span>    <span class="token keyword">function</span> <span class="token function">snakeMove</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//根据上面设置的方向来设置蛇头的位置</span>      <span class="token keyword">switch</span> <span class="token punctuation">(</span>direction<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'left'</span><span class="token punctuation">:</span>          x<span class="token operator">--</span><span class="token punctuation">;</span>          <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'right'</span><span class="token punctuation">:</span>          x<span class="token operator">++</span><span class="token punctuation">;</span>          <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'up'</span><span class="token punctuation">:</span>          y<span class="token operator">--</span><span class="token punctuation">;</span>          <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'down'</span><span class="token punctuation">:</span>          y<span class="token operator">++</span><span class="token punctuation">;</span>          <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//判断是否游戏结束</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> y <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> x <span class="token operator">>=</span> columnNumber <span class="token operator">||</span> y <span class="token operator">>=</span> rowNumber<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'Game Over!!!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 结束蛇移动的定时器</span>        <span class="token function">clearInterval</span><span class="token punctuation">(</span>moveTimer<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//终止键盘事件;</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//如果蛇吃到自己,也要结束游戏</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> snake<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//将此时蛇头移动后的位置与之前左右的组成蛇的div的位置进行比较,如果相同则说明吃到自己,游戏结束</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>snake<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> snakeDIVPosition<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'Game over!!!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token function">clearInterval</span><span class="token punctuation">(</span>moveTimer<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//判断蛇头移动的位置是否有蛋</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>eggX <span class="token operator">==</span> x <span class="token operator">&amp;&amp;</span> eggY <span class="token operator">==</span> y<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        snakeDIVPosition<span class="token punctuation">[</span>eggY<span class="token punctuation">]</span><span class="token punctuation">[</span>eggX<span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'col activeSnake'</span><span class="token punctuation">;</span>        snake<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>snakeDIVPosition<span class="token punctuation">[</span>eggY<span class="token punctuation">]</span><span class="token punctuation">[</span>eggX<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//加入蛇身</span>        scoreCount<span class="token operator">++</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//记录分数</span>        <span class="token comment" spellcheck="true">//更新当前的分数</span>        score<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> scoreCount<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//随机产生一个新的蛋</span>        <span class="token function">createNewEgg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置蛇碰不到蛋的逻辑</span>        <span class="token comment" spellcheck="true">//让蛇移动</span>        <span class="token comment" spellcheck="true">//蛇尾去掉蛇自身的颜色,变成格子的颜色</span>        snake<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'col'</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//将蛇尾div从数组中移除</span>        snake<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//定位到的新的蛇头加入到蛇数组中</span>        snakeDIVPosition<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'col activeSnake'</span><span class="token punctuation">;</span>        snake<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>snakeDIVPosition<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> moveTimer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token string">'snakeMove()'</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//定义一个生成min,max之间的随机数函数</span>    <span class="token keyword">function</span> <span class="token function">random</span><span class="token punctuation">(</span>min<span class="token punctuation">,</span>max<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>max <span class="token operator">-</span> min <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> min<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">createNewEgg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// 随机出新的egg的下标的x和y值</span>      eggX <span class="token operator">=</span> <span class="token function">random</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>columnNumber <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      eggY <span class="token operator">=</span> <span class="token function">random</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>rowNumber <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//判断如果随机产生的蛋与蛇身重合,就重新随机产生一个蛋</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>snakeDIVPosition<span class="token punctuation">[</span>eggY<span class="token punctuation">]</span><span class="token punctuation">[</span>eggX<span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">==</span> <span class="token string">'col activeSnake'</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token function">createNewEgg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//重新随机新的egg</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        snakeDIVPosition<span class="token punctuation">[</span>eggY<span class="token punctuation">]</span><span class="token punctuation">[</span>eggX<span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'col egg'</span><span class="token punctuation">;</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token function">createNewEgg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//在游戏开始的时候生成新的egg</span>    <span class="token keyword">var</span> pause <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'Pause'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> start <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'Start'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> refresh <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'Refresh'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> speed <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'Speed'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//添加暂停按钮</span>    pause<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token function">clearInterval</span><span class="token punctuation">(</span>moveTimer<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//添加开始按钮</span>    start<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token function">clearInterval</span><span class="token punctuation">(</span>moveTimer<span class="token punctuation">)</span><span class="token punctuation">;</span>      moveTimer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token string">'snakeMove()'</span><span class="token punctuation">,</span>speed1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//添加刷新按钮</span>    refresh<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      window<span class="token punctuation">.</span>location<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//添加加速按钮</span>    <span class="token keyword">var</span> speed1 <span class="token operator">=</span> <span class="token number">300</span><span class="token punctuation">;</span>    speed<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      speed1 <span class="token operator">-</span><span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>      <span class="token function">clearInterval</span><span class="token punctuation">(</span>moveTimer<span class="token punctuation">)</span><span class="token punctuation">;</span>      moveTimer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token string">'snakeMove()'</span><span class="token punctuation">,</span>speed1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 源码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html5 </tag>
            
            <tag> 源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重绘重排理解与优化</title>
      <link href="2020/11/04/chong-hui-chong-pai-li-jie-yu-you-hua./"/>
      <url>2020/11/04/chong-hui-chong-pai-li-jie-yu-you-hua./</url>
      
        <content type="html"><![CDATA[<h2 id="重绘"><a href="#重绘" class="headerlink" title="重绘"></a>重绘</h2><ul><li><p>当盒子的位置、大小以及其他属性，例如颜色、字体大小等都确定下来之后，浏览器便把这些原色都按照各自的特性绘制一遍，将内容呈现在页面上。重绘是指一个元素外观的改变所触发的浏览器行为，浏览器会根据元素的新属性重新绘制，使元素呈现新的外观。</p></li><li><p>触发重绘的条件：改变元素外观属性。如：color，background-color，font-size等。</p></li></ul><h2 id="重排-回流"><a href="#重排-回流" class="headerlink" title="重排(回流)"></a>重排(回流)</h2><ul><li><p>当渲染树中的一部分(或全部)因为元素的规模尺寸，布局，隐藏等改变而需要重新构建, 这就称为回流(reflow)。每个页面至少需要一次回流，就是在页面第一次加载的时候。</p></li><li><p>重绘和重排的关系：在回流的时候，浏览器会使渲染树中受到影响的部分失效，并重新构造这部分渲染树，完成回流后，浏览器会重新绘制受影响的部分到屏幕中，该过程称为重绘。</p></li><li><p>所以，重排必定会引发重绘，但重绘不一定会引发重排。</p></li><li><p>触发重排的条件：任何页面布局和几何属性的改变都会触发重排</p></li></ul><p>比如:</p><ul><li>页面渲染初始化；(无法避免)</li><li>添加或删除可见的DOM元素；</li><li>元素位置的改变，或者使用动画；</li><li>元素尺寸的改变——大小，外边距，边框；</li><li>浏览器窗口尺寸的变化（resize事件发生时）；</li><li>填充内容的改变，比如文本的改变或图片大小改变而引起的计算值宽度和高度的改变；</li></ul><p>触发重排的条件：改变元素的大小 位置 等如：width、height、padding、margin、position等，　添加删除DOM操作等</p><p><strong>重绘重排的代价：耗时，导致浏览器卡慢。</strong></p><h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><ul><li><p>浏览器自己的优化：浏览器会维护1个队列，把所有会引起回流、重绘的操作放入这个队列，等队列中的操作到了一定的数量或者到了一定的时间间隔，浏览器就会flush队列，进行一个批处理。这样就会让多次的回流、重绘变成一次回流重绘。</p></li><li><p>我们要注意的优化：我们要减少重绘和重排就是要减少对渲染树的操作，则我们可以合并多次的DOM和样式的修改。并减少对style样式的请求。</p></li></ul><ol><li><p>直接改变元素的className</p></li><li><p>display：none；先设置元素为display：none；然后进行页面布局等操作；设置完成后将元素设置为display：block；这样的话就只引发两次重绘和重排；</p></li><li><p>不要经常访问浏览器的flush队列属性；如果一定要访问，可以利用缓存。将访问的值存储起来，接下来使用就不会再引发回流；</p></li><li><p>使用cloneNode(true or false) 和 replaceChild 技术，引发一次回流和重绘；</p></li><li><p>将需要多次重排的元素，position属性设为absolute或fixed，元素脱离了文档流，它的变化不会影响到其他元素；</p></li><li><p>如果需要创建多个DOM节点，可以使用DocumentFragment创建完后一次性的加入document；</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> html5 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html5 </tag>
            
            <tag> 重绘 </tag>
            
            <tag> 重排 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端面试题</title>
      <link href="2020/11/04/qian-duan-mian-shi-ti-di-yi-tao-jie-xi/"/>
      <url>2020/11/04/qian-duan-mian-shi-ti-di-yi-tao-jie-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="前端面试题"><a href="#前端面试题" class="headerlink" title="前端面试题"></a>前端面试题</h2><h3 id="1、盒子塌陷的原因？解决方式"><a href="#1、盒子塌陷的原因？解决方式" class="headerlink" title="1、盒子塌陷的原因？解决方式"></a>1、盒子塌陷的原因？解决方式</h3><pre class=" language-html"><code class="language-html">原因:     1. 浮动导致的塌陷,浮动会脱落标准流  2. 嵌套的两个盒子,子盒子设置margin-top会导致父盒子一下下移解决方法:    第一种情况 1 清除浮动;  2 给父盒子加高度;  3 给父元素添加overflow:hidden 第二种情况 1 给父元素加上边框; 2 给父元素添加overflow:hidden</code></pre><h3 id="2、不定宽高的div水平垂直居中"><a href="#2、不定宽高的div水平垂直居中" class="headerlink" title="2、不定宽高的div水平垂直居中"></a>2、不定宽高的div水平垂直居中</h3><pre class=" language-css"><code class="language-css">答<span class="token punctuation">:</span> 父元素添加 <span class="token property">position</span><span class="token punctuation">:</span> relative  div&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>   <span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span>   <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>             <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>             <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-<span class="token number">50%</span>, -<span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h3 id="3、css写一个三角形"><a href="#3、css写一个三角形" class="headerlink" title="3、css写一个三角形"></a>3、css写一个三角形</h3><pre class=" language-css"><code class="language-css">答<span class="token punctuation">:</span> div &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>      <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">20</span>px solid transparent<span class="token punctuation">;</span>      <span class="token property">border-width</span><span class="token punctuation">:</span> <span class="token number">40</span>px <span class="token number">20</span>px <span class="token number">0</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token property">border-right-color</span><span class="token punctuation">:</span> <span class="token hexcode">#f99</span><span class="token punctuation">;</span>    &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h3 id="4、css选择器的优先级"><a href="#4、css选择器的优先级" class="headerlink" title="4、css选择器的优先级"></a>4、css选择器的优先级</h3><pre><code>答: !important&gt;行内样式&gt;id选择器&gt;类/属性/伪类选择器&gt;伪元素/标签选择器&gt;通配符选择器*</code></pre><h3 id="5、px、em和rem的区别"><a href="#5、px、em和rem的区别" class="headerlink" title="5、px、em和rem的区别"></a>5、px、em和rem的区别</h3><pre><code>答: px是固定单位,      em是相对单位,相当于当前文字的大小,如果没有就找父元素    rem也是相对单位,相对于html的fontsize的大小</code></pre><h3 id="6、什么是重绘和重排"><a href="#6、什么是重绘和重排" class="headerlink" title="6、什么是重绘和重排"></a>6、什么是重绘和重排</h3><pre><code>答: 重排: 当DOM元素影响了元素的几何属性（例如宽和高），浏览器需要重新计算元素的几何属性，同样其它元素的几何属性也会和位置也会因此受到影响。浏览器会使渲染树中受到影响的部分失效，并重新构造渲染树。这个过程称为“重排”。 重绘: 完成重排后，浏览器会重新绘制受影响的部分到屏幕上中，该过程称为“重绘”。 当我们改变DOM的大小，增加删除都会导致重排，当给DOM元素改变颜色的时候，会导致重绘，重排一定会重绘，重绘不会重排。重排会影响性能，所以我们尽快能的减少重排的操作</code></pre><h3 id="7、flex常用的容器属性"><a href="#7、flex常用的容器属性" class="headerlink" title="7、flex常用的容器属性"></a>7、flex常用的容器属性</h3><pre><code>答:1. flex-direction: 设置容器中的主轴方向2. flex-wrap: 项目在主轴方向上是否换行显示3. justify-content: 设置容器中的项目在主轴上的对齐方式4. align-items: 单行项目在侧轴上的排列方式5. align-content: 多行项目侧轴上的对齐方式6. flex-flow: 是flex-direction和flex-wrap的合写, 默认值为row nowrap</code></pre><h3 id="8、如何设置比12px更小的字体"><a href="#8、如何设置比12px更小的字体" class="headerlink" title="8、如何设置比12px更小的字体"></a>8、如何设置比12px更小的字体</h3><pre><code>答:   p &#123;     font-size:12px;   -webkit-transform:scale(0.8);     &#125;</code></pre><h3 id="9、H5新增了那些特性"><a href="#9、H5新增了那些特性" class="headerlink" title="9、H5新增了那些特性"></a>9、H5新增了那些特性</h3><pre><code>答:1. 语义化标签: header nav section article aside footer2. 多媒体标签: video audio3. 表单控件: number search email tel date file time  url4. 本地离线存储 localStorage 长期存储数据,改变浏览器数据不会丢失     sessionStorage 浏览器关闭数据会丢失5. 自定义属性 data-*6. 画布 Canvas7. 拖拽释放 (Drap and Drap) API ondrop8. 新的技术文本 webworker9. 地理位置 (Geolocation) API</code></pre><h3 id="10、C3新增了那些特性"><a href="#10、C3新增了那些特性" class="headerlink" title="10、C3新增了那些特性"></a>10、C3新增了那些特性</h3><pre class=" language-css"><code class="language-css">答<span class="token punctuation">:</span><span class="token number">1.</span> 圆角 border-radius<span class="token number">2.</span> 盒子模型 box-sizing<span class="token number">3.</span> 阴影 box-shadow 盒子阴影  text-shadow 文字阴影<span class="token number">4.</span> 过渡 transition<span class="token number">5.</span> <span class="token number">2</span>D转换transform  <span class="token function">translate</span><span class="token punctuation">(</span>平移<span class="token punctuation">)</span> <span class="token function">scale</span><span class="token punctuation">(</span>缩放<span class="token punctuation">)</span>  <span class="token function">skew</span><span class="token punctuation">(</span>斜切<span class="token punctuation">)</span> <span class="token function">rotate</span><span class="token punctuation">(</span>旋转<span class="token punctuation">)</span> transform-origin 控制转换中心点<span class="token number">6.</span> <span class="token number">3</span>D转换 <span class="token function">perspective</span><span class="token punctuation">(</span>透视距<span class="token punctuation">)</span>  <span class="token function">transform-style</span><span class="token punctuation">(</span><span class="token number">3</span>D控件效果<span class="token punctuation">)</span><span class="token number">7.</span> 渐变 linear-gradient 线性渐变 radial-gradient径向渐变<span class="token number">8.</span> 弹性布局 flex<span class="token number">9.</span> 媒体查询 <span class="token atrule"><span class="token rule">@media</span> screen and <span class="token punctuation">(</span><span class="token punctuation">)</span> &amp;#123<span class="token punctuation">;</span></span><span class="token number">...</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token number">10.</span> 边框图片 border-image<span class="token number">11.</span> 自定义动画 @keyframes    animation<span class="token number">12.</span> 颜色 新增RGBA HSLA模式<span class="token number">13.</span> 背景 background-size   background-origin   background-clip</code></pre><h3 id="11、js的数据类型有哪些"><a href="#11、js的数据类型有哪些" class="headerlink" title="11、js的数据类型有哪些"></a>11、js的数据类型有哪些</h3><pre class=" language-js"><code class="language-js">答<span class="token punctuation">:</span> 简单数据类型<span class="token punctuation">:</span> number string boolean undefined   <span class="token keyword">null</span> 复杂数据类型<span class="token punctuation">:</span> object  <span class="token keyword">function</span>  array</code></pre><h3 id="12、typeof返回的数据类型"><a href="#12、typeof返回的数据类型" class="headerlink" title="12、typeof返回的数据类型"></a>12、typeof返回的数据类型</h3><pre><code>答: number string boolean undefined  object  function   特殊情况：   typeof null --&gt;object   typeof array --&gt;object   typeof typeof 任何类型  --&gt;string</code></pre><h3 id="13、返回false的情况有哪些"><a href="#13、返回false的情况有哪些" class="headerlink" title="13、返回false的情况有哪些"></a>13、返回false的情况有哪些</h3><pre><code>答: 0  &quot;&quot;   null  false  NaN  undefined  不成立的表达式</code></pre><h3 id="14、对this的理解"><a href="#14、对this的理解" class="headerlink" title="14、对this的理解"></a>14、对this的理解</h3><pre><code>答: this是个关键字,它的指向和函数的调用方式有关1. 函数调用模式, this指向window2. 构造函数调用模式, this指向新创建的实例对象3. 方法调用模式, this指向调用方法的对象4. 上下文调用模式, call和apply方法中, this指向方法内的第一个参数                  bind方法中, bind创建的新函数的this绑定为bind方法中新的函数5. 在事件处理函数中,this指向触发事件的当前元素6. 定时器中,this指向window7. 箭头函数中没有this指向问题,它的this和外层作用域的this保持一致8. 匿名函数中的this总是指向window</code></pre><h3 id="15、new操作符做了什么"><a href="#15、new操作符做了什么" class="headerlink" title="15、new操作符做了什么"></a>15、new操作符做了什么</h3><pre><code>答:  1. 创建一个新对象 2. 函数内部的this指向这个对象 3. 执行函数体 4. 自动返回这个函数</code></pre><h3 id="16、什么是深拷贝什么是浅拷贝"><a href="#16、什么是深拷贝什么是浅拷贝" class="headerlink" title="16、什么是深拷贝什么是浅拷贝"></a>16、什么是深拷贝什么是浅拷贝</h3><pre><code>答: 浅拷贝: 拷贝对象的一层属性,如果对象里面还有对象,拷贝的是地址, 两者之间修改会有影响,适用于对象里面属性的值是简单数据类型的.    深拷贝: 拷贝对象的多层属性,如果对象里面还有对象,会继续拷贝,使用递归去实现.</code></pre><h3 id="17、如何实现深拷贝和浅拷贝"><a href="#17、如何实现深拷贝和浅拷贝" class="headerlink" title="17、如何实现深拷贝和浅拷贝"></a>17、如何实现深拷贝和浅拷贝</h3><pre class=" language-js"><code class="language-js">答<span class="token punctuation">:</span>浅拷贝<span class="token punctuation">:</span>    <span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">class</span><span class="token punctuation">:</span> <span class="token string">'UI'</span><span class="token punctuation">,</span>      age<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>      love<span class="token punctuation">:</span> <span class="token string">'eat'</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">getObj</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">var</span> newObj <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> k <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        newObj<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>k<span class="token punctuation">]</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> newObj    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> obj2 <span class="token operator">=</span> <span class="token function">getObj</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span>深拷贝<span class="token punctuation">:</span>  <span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">class</span><span class="token punctuation">:</span> <span class="token string">'前端'</span><span class="token punctuation">,</span>      age<span class="token punctuation">:</span> <span class="token number">26</span><span class="token punctuation">,</span>      love<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      friuts <span class="token punctuation">:</span> <span class="token string">'apple'</span><span class="token punctuation">,</span>      meat<span class="token punctuation">:</span> <span class="token string">'beef'</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token keyword">function</span> <span class="token function">getObj</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">var</span> newObj <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> k <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/* if (typeof obj[k] == 'object') &amp;#123;          newObj[k] = getObj(obj[k])        &amp;#125; else &amp;#123;          newObj[k] = obj[k]        &amp;#125; */</span>        newObj<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> obj<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'object'</span> <span class="token operator">?</span> <span class="token function">getObj</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> obj<span class="token punctuation">[</span>k<span class="token punctuation">]</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> newObj    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> obj2 <span class="token operator">=</span> <span class="token function">getObj</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span></code></pre><h3 id="18、对闭包的理解？并能举出闭包的例子"><a href="#18、对闭包的理解？并能举出闭包的例子" class="headerlink" title="18、对闭包的理解？并能举出闭包的例子"></a>18、对闭包的理解？并能举出闭包的例子</h3><pre class=" language-html"><code class="language-html">答: 闭包 函数和声明该函数的词法环境的组合(两个嵌套关系的函数,内部函数可以访问外部函数定义的变量)    闭包的优点：1、形成私有空间，避免全局变量的污染               2、持久化内存，保存数据    闭包的缺点：1、持久化内存，导致内存泄露    解决：1、尽快避免函数的嵌套，以及变量的引用          2、执行完的变量，可以赋值null，让垃圾回收机制，进行回收释放内存（当不在引用的变量，垃圾回收机制就会回收）例: 点击li获取当前下标    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>111<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>222<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>333<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>444<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>555<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>      var lis = document.querySelectorAll('li')      for (var i = 0; i &lt; lis.length; i++) <span class="token entity" title="&#123;">&amp;#123;</span>        (function (j) <span class="token entity" title="&#123;">&amp;#123;</span>          lis[j].onclick = function () <span class="token entity" title="&#123;">&amp;#123;</span>            console.log(j)          <span class="token entity" title="&#125;">&amp;#125;</span>        <span class="token entity" title="&#125;">&amp;#125;</span>)(i)      <span class="token entity" title="&#125;">&amp;#125;</span></code></pre><h3 id="19、什么是原型和原型链"><a href="#19、什么是原型和原型链" class="headerlink" title="19、什么是原型和原型链"></a>19、什么是原型和原型链</h3><pre><code>答: 原型: 函数都有prototype属性,这个属性的值是个对象,称之为原型   原型链: 对象都有__proto__属性,这个属性指向它的原型对象,原型对象也是对象,也有__proto__属性,指向原型对象的原型对象,这样一层一层形成的链式结构称为原型链.</code></pre><h3 id="20、call、apply和bind的区别"><a href="#20、call、apply和bind的区别" class="headerlink" title="20、call、apply和bind的区别"></a>20、call、apply和bind的区别</h3><pre class=" language-js"><code class="language-js">答<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">.</span> call和apply方法都可以调用函数<span class="token punctuation">,</span>方法内的第一个参数可以修改<span class="token keyword">this</span>的指向 <span class="token number">2</span><span class="token punctuation">.</span> call方法可以有多个参数<span class="token punctuation">,</span>除了第一个参数<span class="token punctuation">,</span>其他参数作为实参传递给函数    apply方法最多有<span class="token number">2</span>个参数<span class="token punctuation">,</span>第二个参数是个数组或伪数组<span class="token punctuation">,</span>数组里面的每一项作为实参传递给函数 <span class="token number">3</span><span class="token punctuation">.</span> bind方法不能调用函数<span class="token punctuation">,</span>它会创建一个副本函数<span class="token punctuation">,</span>并且绑定新函数的<span class="token keyword">this</span>指向bind返回的新的函数</code></pre><h3 id="21、-和-的区别"><a href="#21、-和-的区别" class="headerlink" title="21、==和===的区别"></a>21、==和===的区别</h3><pre class=" language-js"><code class="language-js">答：<span class="token operator">==</span> 表示是相等，只比较内容   <span class="token operator">===</span> 表示是全等，不仅比较内容，也比较类型</code></pre><h3 id="22、es6新增常用方法"><a href="#22、es6新增常用方法" class="headerlink" title="22、es6新增常用方法"></a>22、es6新增常用方法</h3><pre class=" language-js"><code class="language-js">答<span class="token punctuation">:</span><span class="token keyword">let</span>、<span class="token keyword">const</span>解构赋值箭头函数字符串模板扩展运算符数组方法：map、filter等等<span class="token keyword">class</span>关键字模块化：<span class="token keyword">import</span><span class="token operator">--</span>引入、exprot <span class="token keyword">default</span><span class="token operator">--</span>导出</code></pre><h3 id="23、怎么理解函数的防抖和节流"><a href="#23、怎么理解函数的防抖和节流" class="headerlink" title="23、怎么理解函数的防抖和节流"></a>23、怎么理解函数的防抖和节流</h3><pre class=" language-html"><code class="language-html">答:1、定义：防抖: 就是指触发事件后在n秒内函数只能执行一次，如果在n秒内又触发了事件，则会重新计算函数执行时间。     例如：设定1000毫秒执行，当你触发事件了，他会1000毫秒后执行，但是在还剩500毫秒的时候你又触发了事件，那就会重新开始1000毫秒之后再执行节流: 就是指连续触发事件但是在设定的一段时间内中只执行一次函数。     例如：设定1000毫秒执行，那你在1000毫秒触发在多次，也只在1000毫秒后执行一次2、防抖和节流的实现：    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ipt<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">      <span class="token keyword">var</span> timerId <span class="token operator">=</span> <span class="token keyword">null</span>      document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.ipt'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>onkeyup <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 防抖</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>timerId <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timerId<span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        timerId <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'我是防抖'</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>      document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.ipt'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>onkeyup <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 节流</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>timerId <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          <span class="token keyword">return</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        timerId <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'我是节流'</span><span class="token punctuation">)</span>          timerId <span class="token operator">=</span> <span class="token keyword">null</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><h3 id="24、什么是事件流"><a href="#24、什么是事件流" class="headerlink" title="24、什么是事件流"></a>24、什么是事件流</h3><pre><code>答: 事件流是指事件传播的顺序,由事件捕获 =&gt; 目标事件 =&gt; 事件冒泡</code></pre><h3 id="25、如何阻止冒泡和默认行为"><a href="#25、如何阻止冒泡和默认行为" class="headerlink" title="25、如何阻止冒泡和默认行为"></a>25、如何阻止冒泡和默认行为</h3><pre class=" language-js"><code class="language-js">答<span class="token punctuation">:</span> 阻止冒泡和捕获  e<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    阻止默认行为   e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token keyword">return</span> <span class="token boolean">false</span>    注意：addEventListener注册的事件，在高浏览器版本中，<span class="token keyword">return</span> <span class="token boolean">false</span>将没有效果，必须要用事件对象</code></pre><h3 id="26、原生注册事件的方式有哪些？区别是什么"><a href="#26、原生注册事件的方式有哪些？区别是什么" class="headerlink" title="26、原生注册事件的方式有哪些？区别是什么"></a>26、原生注册事件的方式有哪些？区别是什么</h3><pre class=" language-js"><code class="language-js">答<span class="token punctuation">:</span> 注册方式    <span class="token number">1</span><span class="token punctuation">.</span> on <span class="token operator">+</span> 事件名称    <span class="token number">2</span><span class="token punctuation">.</span> addEventListener  区别<span class="token punctuation">:</span>   <span class="token number">1</span><span class="token punctuation">.</span> 使用on注册事件<span class="token punctuation">,</span>同一个元素只能注册一个同类型事件<span class="token punctuation">,</span>否则会覆盖。   <span class="token number">2</span><span class="token punctuation">.</span> addEventListener可以注册同一事件多次<span class="token punctuation">,</span>不会被覆盖。</code></pre><h3 id="27、http和https的区别"><a href="#27、http和https的区别" class="headerlink" title="27、http和https的区别"></a>27、http和https的区别</h3><pre><code>答:  1.https协议需要到CA申请证书，一般免费证书较少，因而需要一定费用。  2.http是超文本传输协议，信息是明文传输，https则是具有安全性的ssl/tls加密传输协议。  3.http和https使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。  4.http的连接很简单，是无状态的；HTTPS协议是由SSL/TLS+HTTP协议构建的可进行加密传输、身份认证的网络协议，比http协议安全。</code></pre><h3 id="28、get-和post的区别"><a href="#28、get-和post的区别" class="headerlink" title="28、get 和post的区别"></a>28、get 和post的区别</h3><pre><code>答: get   1. 在url后面拼接参数,只能以文本的形式传递数据   2. 传递的数据量小,4KB左右   3. 安全性低, 会将数据显示在地址栏   4. 速度快,通常用于安全性要求不高的请求   5. 会缓存数据 post      1. 安全性比较高   2. 传递数据量大,请求对数据长度没有要求   3. 请求不会被缓存,也不会保留在浏览器历史记录里</code></pre><h3 id="29、项目中遇到的状态码有哪些"><a href="#29、项目中遇到的状态码有哪些" class="headerlink" title="29、项目中遇到的状态码有哪些"></a>29、项目中遇到的状态码有哪些</h3><pre><code>答: 200  请求成功,  2开头的异步表示请求成功  304  请求被允许,但请求内容没有改变, 3开头的一般请求完成  400  请求格式错误,  4开头的一般表示请求错误  404  请求的资源(网页)不存在,    500  内部服务器错误,  5开头的一般都是指服务器错误</code></pre><h3 id="30、jsonp的原理？以及优缺点"><a href="#30、jsonp的原理？以及优缺点" class="headerlink" title="30、jsonp的原理？以及优缺点"></a>30、jsonp的原理？以及优缺点</h3><pre><code>答: 原理: 利用script标签的src属性具有天然可跨域的特性，由服务端返回一个预先定义好的Javascript函数的调用，并且将服务器数据以该函数参数的形式响应给浏览器.  优点: 完美解决在测试或者开发中获取不同域下的数据,用户传递一个callback参数给服务端，然后服务端返回数据时会将这个callback参数作为函数名来包裹住JSON数据，这样客户端就可以随意定制自己的函数来自动处理返回数据了。  缺点：Jsonp只支持get请求而不支持post 请求,也即是说如果想传给后台一个json 格式的数据,此时问题就来了, 浏览器会报一个http状态码41错误,告诉你请求格式不正确.</code></pre><h3 id="31、什么是同源策略？怎么解决跨域问题"><a href="#31、什么是同源策略？怎么解决跨域问题" class="headerlink" title="31、什么是同源策略？怎么解决跨域问题"></a>31、什么是同源策略？怎么解决跨域问题</h3><pre><code>答: 同源策略: 同源策略是浏览器的一种安全策略, 所谓同源是指域名、协议、端口完全相同，不同源则跨域。   解决跨域的方法:   1. 通过jsonp跨域   2. 跨域资源共享（CORS  Access-Control-Allow-Origin: http://api.bob.com）   3. nginx代理跨域</code></pre><h3 id="32、页面通信的方式有哪些"><a href="#32、页面通信的方式有哪些" class="headerlink" title="32、页面通信的方式有哪些"></a>32、页面通信的方式有哪些</h3><pre><code>答: 1. 通过url拼接地址 2. H5本地存储</code></pre><h3 id="33、null和undefined的区别"><a href="#33、null和undefined的区别" class="headerlink" title="33、null和undefined的区别"></a>33、null和undefined的区别</h3><pre class=" language-js"><code class="language-js">答：<span class="token keyword">null</span> 表示空值 没有获取到。<span class="token keyword">typeof</span> <span class="token keyword">null</span> 返回<span class="token string">"object"</span>   undefined 表示未定义，声明没有值。<span class="token keyword">typeof</span> undefined 返回<span class="token string">"undefined"</span></code></pre><h3 id="34、Json字符串和json对象怎么相互转换"><a href="#34、Json字符串和json对象怎么相互转换" class="headerlink" title="34、Json字符串和json对象怎么相互转换"></a>34、Json字符串和json对象怎么相互转换</h3><pre><code>答: JSON对象转JSON字符串: json.stringify(对象)    JSON字符串转JSON对象: json.parse(字符串)</code></pre><h3 id="35、怎么理解同步和异步"><a href="#35、怎么理解同步和异步" class="headerlink" title="35、怎么理解同步和异步"></a>35、怎么理解同步和异步</h3><pre class=" language-js"><code class="language-js"><span class="token number">1</span>、javascript是单线程。单线程就意味着，所有任务需要排队，前一个任务结束，才会执行后一个任务。如果前一个任务耗时很长，后一个任务就不得不一直等着。于是就有一个概念——任务队列。<span class="token number">2</span>、所有任务可以分成两种，一种是同步任务（synchronous），另一种是异步任务（asynchronous）。同步任务指的是，在主线程上排队执行的任务，只有前一个任务执行完毕，才能执行后一个任务；异步任务指的是，不进入主线程、而进入<span class="token string">"任务队列"</span>（task queue）的任务，只有等主线程任务执行完毕，<span class="token string">"任务队列"</span>开始通知主线程，请求执行任务，该任务才会进入主线程执行。</code></pre><h3 id="36、localStorage、sessionStorage和cookie的区别"><a href="#36、localStorage、sessionStorage和cookie的区别" class="headerlink" title="36、localStorage、sessionStorage和cookie的区别"></a>36、localStorage、sessionStorage和cookie的区别</h3><pre><code>答: 共同点: 都是保存在浏览器端，且同源的。 区别: 1. 请求不同:  cookie 数据始终在同源的http请求中携带（即使不需要），即cookie在浏览器和服务器间来回传递。    sessionStorage 和 localStorage不会自动把数据发给服务器，仅在本地保存。 2. 存储大小限制也不同:  cookie 数据不能超过4k，同时因为每次http请求都会携带cookie，所以cookie只适合保存很小的数据，如会话标识。  sessionStorage 和 localStorage虽然也有存储大小的限制，但比cookie大得多，sessionStorage约5M、localStorage约5M 。 3. 数据有效期不同:   sessionStorage：仅在当前浏览器窗口关闭前有效，自然也就不可能持久保持；   localStorage：始终有效，窗口或浏览器关闭也一直保存，因此用作持久数据；   cookie只在设置的cookie过期时间之前一直有效，即使窗口或浏览器关闭。 4. 作用域不同:  sessionStorage不在不同的浏览器窗口中共享，即使是同一个页面；  localStorage在所有同源窗口中都是共享的；  cookie也是在所有同源窗口中都是共享的。</code></pre><h3 id="37、你对WebSocket了解哪些"><a href="#37、你对WebSocket了解哪些" class="headerlink" title="37、你对WebSocket了解哪些"></a>37、你对WebSocket了解哪些</h3><pre><code>答: WebSocket 是HTML5一种新的协议。它实现了浏览器与服务器全双工通信，能更好的节省服务器资源和带宽并达到实时通讯，它建立在TCP之上，同HTTP一样通过TCP来传输数据，但是它和HTTP最大不同是： 1. WebSocket是一种双向通信协议，在建立连接后，WebSocket服务器和Browser/Client Agent都能主动的向对方发送或接收数据，就像Socket一样； 2. WebSocket需要类似TCP的客户端和服务器端通过握手连接连接成功后才能相互通信。</code></pre><h3 id="38、js的运行机制是什么"><a href="#38、js的运行机制是什么" class="headerlink" title="38、js的运行机制是什么"></a>38、js的运行机制是什么</h3><pre class=" language-js"><code class="language-js">答：js是单线程执行的，页面加载时，会自上而下执行主线程上的同步任务，当主线程代码执行完毕时，才开始执行在任务队列中的异步任务。具体如下      <span class="token number">1</span><span class="token punctuation">.</span>所有同步任务都在主线程上执行，形成一个执行栈。    <span class="token number">2</span><span class="token punctuation">.</span>主线程之外，还存在一个<span class="token string">"任务队列(eventloop队列或者消息队列)"</span>。只要异步任务有了运行结果，就在<span class="token string">"任务队列"</span>之中放置一个事件。    <span class="token number">3</span><span class="token punctuation">.</span>一旦<span class="token string">"执行栈"</span>中的所有同步任务执行完毕，系统就会读取<span class="token string">"任务队列"</span>，看看里面有哪些事件。哪些对应的异步任务，于是结束等待状态，进入执行栈，开始执行。    <span class="token number">4</span><span class="token punctuation">.</span>主线程不断重复上面的第三步。</code></pre><h3 id="39、怎么理解面向对象"><a href="#39、怎么理解面向对象" class="headerlink" title="39、怎么理解面向对象"></a>39、怎么理解面向对象</h3><pre class=" language-js"><code class="language-js">答：<span class="token number">1</span>、面向对象是一种软件开发的思想和面向过程是相对应的，就是把程序看作一个对象，将属性和方法封装其中，以提高代码的灵活性、复用性、可扩展性。  <span class="token number">2</span>、面向对象有三大特性：封装、继承、多态。       封装：把相关的信息（无论数据或方法）存储在对象中的能力       继承：由另一个类（或多个类）得来类的属性和方法的能力       多态：编写能以多种方法运行的函数或方法的能力   <span class="token number">3</span>、js中对象是一个无序的数据集合或者也可以说是属性和方法的集合，可以动态的添加属性可方法。   <span class="token number">4</span>、js是基于对象，但是也使用了嵌入了面向对象的思想，可以实现继承和封装，这样也可以提供代码的灵活性和复用性。</code></pre><h3 id="40、如何清除浏览器的缓存"><a href="#40、如何清除浏览器的缓存" class="headerlink" title="40、如何清除浏览器的缓存"></a>40、如何清除浏览器的缓存</h3><pre><code>答: 当我们请求的地址相同的时候，浏览器为了提高性能，会把相同地址的数据进行缓存。如果服务端的数据发生改变，客户端也不会更新，那就需要清除缓存    解决：在url后面加时间戳    例如：https://www.baidu.com?time=New Date()</code></pre><h3 id="41、token的作用是什么"><a href="#41、token的作用是什么" class="headerlink" title="41、token的作用是什么"></a>41、token的作用是什么</h3><pre><code>答: token是服务端生成的“令牌”，来标识不同身份的    1. 防止表单重复提交    2.判断用户是否登录</code></pre><h3 id="42、列举echarts常用的配置项，说明含义"><a href="#42、列举echarts常用的配置项，说明含义" class="headerlink" title="42、列举echarts常用的配置项，说明含义"></a>42、列举echarts常用的配置项，说明含义</h3><pre><code>答:      图表标题 title  图例  legend  值域 dataRange  提示框 tooltip  区域缩放控制器 dataZoom  网格 grid  类目轴 categoryAxis  值型坐标轴默认参数 valueAxis  柱形图默认参数 bar  折线图默认参数 line  散点图默认参数 scatter  饼图默认参数 pie  默认标志图形类型列表 symbolList  可计算特性配置, 孤岛, 提示颜色 calculable</code></pre><h3 id="43、git如何管理一个项目"><a href="#43、git如何管理一个项目" class="headerlink" title="43、git如何管理一个项目"></a>43、git如何管理一个项目</h3><pre><code>答: 1、git init初始化git仓库（新项目才有这一步）    2、git clone将远程仓库的项目资料下载下来    3、git checkout -b dev (dev 为本地分支名）    4、git add .将工作区文件存在暂存区    4、git commit -m  &quot;&quot;从暂存区存到仓储区    5、git checkout master切到master分支    6、git merge dev 合并分支,合并后要将分支删除    7、使用git push将其上传到远程仓库    8、第二上班，先pull一下，更新最新代码</code></pre><h3 id="44、介绍一下你们公司的开发流程（自己理解，形成自己的东西）"><a href="#44、介绍一下你们公司的开发流程（自己理解，形成自己的东西）" class="headerlink" title="44、介绍一下你们公司的开发流程（自己理解，形成自己的东西）"></a>44、介绍一下你们公司的开发流程（自己理解，形成自己的东西）</h3><pre><code>答: （这是最基础的流程，自己理解，形成自己的东西）    1、项目确定下来后    2、先分配确定开发人员,然后产品会召集相关开发人员一起开一个项目分析会    3、接着就项目立项了,项目立项会形成一个prd,确定开发周期    4、然后就进入开发阶段了,在开发一段时间会进行前后端联调    5、功能完成后会先进行冒烟测试,检查是否有阻塞缺陷    6、开发全部结束就进入测试阶段    7、测试通过就可以上线了,上线之后会有一个回归测试，检查有没有影响以前的功能，保证全流程没有问题</code></pre><h3 id="45、在地址栏输入网址，到数据返回的过程是什么"><a href="#45、在地址栏输入网址，到数据返回的过程是什么" class="headerlink" title="45、在地址栏输入网址，到数据返回的过程是什么"></a>45、在地址栏输入网址，到数据返回的过程是什么</h3><pre class=" language-js"><code class="language-js">答<span class="token punctuation">:</span>  <span class="token number">1</span><span class="token punctuation">.</span> 输入url地址后，首先进行DNS解析，将相应的域名解析为IP地址。     <span class="token number">2</span><span class="token punctuation">.</span> 根据IP地址去寻找相应的服务器。     <span class="token number">3</span><span class="token punctuation">.</span> 与服务器进行TCP的三次握手，建立连接。     <span class="token number">4</span><span class="token punctuation">.</span> 客户端发送请求，找到相应的资源库。     <span class="token number">5</span><span class="token punctuation">.</span> 客户端拿到数据，进行相应的渲染。</code></pre><h3 id="46、原生-ajax-请求的步骤"><a href="#46、原生-ajax-请求的步骤" class="headerlink" title="46、原生 ajax 请求的步骤"></a>46、原生 ajax 请求的步骤</h3><pre class=" language-js"><code class="language-js">答：<span class="token number">1</span><span class="token punctuation">.</span>创建异步对象 <span class="token keyword">var</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HTMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token number">2</span><span class="token punctuation">.</span>设置请求行  xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token number">3</span><span class="token punctuation">.</span>设置请求头  xhr<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token keyword">get</span>请求没有请求头    <span class="token number">4</span><span class="token punctuation">.</span>设置请求体  xhr<span class="token punctuation">.</span>send      <span class="token keyword">get</span>请求没有请求体<span class="token punctuation">,</span>参数为<span class="token keyword">null</span>    <span class="token number">5</span><span class="token punctuation">.</span>监视异步对象的状态变化   xhr<span class="token punctuation">.</span><span class="token function">onreadystatechange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 面试题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
